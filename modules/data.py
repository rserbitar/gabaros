#!/usr/bin/env python
# coding: utf8
# from gluon import *

#!/usr/bin/env python
# coding: utf8
# request, response, session, cache, T, db(s)
# must be passed and cannot be imported!

from collections import namedtuple, OrderedDict
import rules

def replace_stars(data):
    for i, v in enumerate(data):
        for i2, v2 in enumerate(v):
            if isinstance(v2, str) and "*" in v2:
                data[i][i2] = v2.replace("*", data[i][data[0].index("parent")])


converted = ['attributes', 'bodyparts', 'stats', 'skill_attribmods']

states = ["Physical Damage",
          "Stun Damage",
          "Head Wounds",
          "Upper Torso Wounds",
          "Lower Torso Wounds",
          "Left Arm Wounds",
          "Right Arm Wounds",
          "Left Leg Wounds",
          "Right Leg Wounds",
          "Stunned",
          "Unconscious"]

permits = [
    ["name", "cost_multiplier"],
    ['none', 1],
    ['civilian', 1.5],
    ['security', 2.5],
    ['military', 5]
]

permits_nt = namedtuple('permits', ['id'] + permits[0])
permits_dict = OrderedDict([(entry[0], permits_nt(*([i] + entry))) for i, entry in enumerate(permits[1:])])

form_factors = [
    ["name", "accessory", "size", 'description'],
    ['commlink', True, 1.5, ''],
    ['lenses', True, 1.5, ''],
    ['glasses', True, 1.5, ''],
    ['goggles', True, 1.5, ''],
    ['helmet', True, 1.5, ''],
    ['micro sensors', True, 1.5, ''],
    ['mini sensors', True, 1.5, ''],
    ['basic sensors', True, 1.5, ''],
    ['macro sensors', True, 1.5, ''],
    ['commlink', True, 1.5, ''],
    ['cyberdeck', True, 2, ''],
    ['gun', True, 1, ''],
    ['ciggaret_box', False, 3, ''],
    ['match_box', False, 3, ''],
    ['ciggaret_box', False, 3, ''],
    ['one_litre_box', False, 3, ''],
]

form_factors_nt = namedtuple('form_factors', ['id'] + form_factors[0])
form_factors_dict = OrderedDict([(entry[0], form_factors_nt(*([i] + entry))) for i, entry in enumerate(form_factors[1:])])

damagekinds = [
    ["name", "healing_time", "description", "priority"],
    ["fatigue", 1 / 24., "Damage gained by physical exertion", 1],
    ["stun", 1 / 24. * 5, "Bruises,...", 10],
    ["physical", 30, "", 100],
    ["drain stun", 1 / 24. * 5, "Drain Stun", 5],
    ["drain physical", 30, "Drain Physical", 50]
]

damagekinds_nt = namedtuple('damagekind', ['id'] + damagekinds[0])
damagekinds_dict = OrderedDict([(entry[0], damagekinds_nt(*([i] + entry))) for i, entry in enumerate(damagekinds[1:])])

statclasses = [
    ["name", "parent"],
    ["Char", None],
    ["Item", None],
    ["Attributes", "Char"],
    ["Ware", "Item"],
    ["Cyberware", "Ware"],
    ["Bioware", "Ware"],
    ["Nanoware", "Ware"],
    ["Genetech", "Ware"],
    ["Weapon", "Item"],
    ["Ranged Weapon", "Weapon"],
    ["Melee Weapon", "Weapon"],
    ["Armor", "Item"],
    ["Sensor", "Item"],
    ["Cyberdeck", "Item"]
]

stats = [
    ["name", "clas", "parent", "type"],
    ["Action Costs", "Char", None, "float"],
    ["Awareness Costs", "Char", "Action Costs", "float"],
    ["Time Costs", "Char", "Action Costs", "float"],
    ["Physical Awareness", "Char", "Awareness Costs", "float"],
    ["Physical Time", "Char", "Time Costs", "float"],
    ["Move Awareness", "Char", "Physical Awareness Costs", "float"],
    ["Move Time", "Char", "Physical Time Costs", "float"],
    ["Shift Awareness", "Char", "Physical Awareness Costs", "float"],
    ["Shift Time", "Char", "Physical Time Costs", "float"],
    ["Meta Awareness", "Char", "Awareness Costs", "float"],
    ["Meta Time", "Char", "Time Costs", "float"],
    ["General Awareness", "Char", "Awareness Costs", "float"],
    ["General Time", "Char", "Time Costs", "float"],
    ["Combat Awareness", "Char", "Physical Awareness Costs", "float"],
    ["Combat Time", "Char", "Physical Time Costs", "float"],
    ["Melee Combat Awareness", "Char", "Combat Awareness", "float"],
    ["Melee Combat Time", "Char", "Combat Time", "float"],
    ["Ranged Combat Awareness", "Char", "Combat Awareness", "float"],
    ["Ranged Combat Time", "Char", "Combat Time", "float"],
    ["Astral Awareness", "Char", "Awareness Costs", "float"],
    ["Astral Time", "Char", "Time Costs", "float"],
    ["Matrix Awareness", "Char", "Awareness Costs", "float"],
    ["Matrix Time", "Char", "Time Costs", "float"],
    ["Name", "Char", None, "str"],
    ["Streetname", "Char", None, "str"],
    ["Date of Birth", "Char", None, "date"],
    ["Skintone", "Char", None, "str"],
    ["Eyecolor", "Char", None, "str"],
    ["Hairstyle", "Char", None, "str"],
    ["Haircolor", "Char", None, "str"],
    ["Loadout", "Char", None, "int"],
    ["Woundlimit", "Char", None, "float"],
    ["Life", "Char", None, "float"],
    ["Carriing Capacity", "Char", None, "float"],
    ["Initiative", "Char", None, "float"],
    ["Reaction", "Char", None, "float"],
    ["Physical Initiative", "Char", "Initiative", "float"],
    ["Physical Reaction", "Char", "Reaction", "float"],
    ["Matrix Initiative", "Char", "Initiative", "float"],
    ["Matrix Reaction", "Char", "Reaction", "float"],
    ["Astral Initiative", "Char", "Initiative", "float"],
    ["Astral Reaction", "Char", "Reaction", "float"],
    ["Legality", "Item", None, "float"],
    ["Visible Stealth Rating", "Item", None, "float"],
    ["Scan Stealth Rating", "Item", None, "float"],
    ["Ballistic Armor", "Armor", None, "float"],
    ["Impact Armor", "Armor", None, "float"],
    ["Shielding", "Armor", None, "float"],
    ["Insulation", "Armor", None, "float"],
    ["Agility Cap", "Armor", None, "float"],
    ["Coordination Multiplier", "Armor", None, "float"],
    ["Damage", "Weapon", None, "float"],
    ["Damagetype", "Weapon", None, "str"],
    ["Penetration", "Weapon", None, "float"],
    ["Range", "Weapon", None, "float"],
    ["Single Shot Rate", "Weapon", None, "integer"],
    ["Burst Shot Rate", "Weapon", None, "integer"],
    ["Auto Shot Rate", "Weapon", None, "integer"],
]

stats_nt = namedtuple('stat', ['id'] + stats[0])
stats_dict = OrderedDict([(entry[0], stats_nt(*([i] + entry))) for i, entry in enumerate(stats[1:])])

races = [
    ["name", "Size", "Weight", "Agility", "Constitution", "Coordination", "Strength", "Charisma", "Intuition", "Logic",
     "Willpower", "Magic", "Edge", "xpcost"],
    ["Human", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    ["Troll", 1.3, 1.3, 0.9, 1.3, 0.7, 1.1, 0.8, 1.1, 0.7, 0.9, 1, 1, 0],
    ["Orc", 1.1, 1.2, 1.2, 1.2, 1, 1.1, 0.7, 1.1, 0.7, 1.2, 1, 1, 0],
    ["Elf", 1.1, 0.8, 1.3, 0.8, 1.2, 0.8, 1.2, 1.1, 0.9, 1, 1, 1, 0],
    ["Dwarf", 0.75, 1.5, 0.8, 1.3, 1.2, 1.5, 1, 0.9, 1.1, 1.2, 1, 1, 0],
]

races_nt = namedtuple('race', ['id'] + races[0])
races_dict = OrderedDict([(entry[0], races_nt(*([i] + entry))) for i, entry in enumerate(races[1:])])

gendermods = [
    ["name", "Size", "Weight", "Agility", "Constitution", "Coordination", "Strength", "Charisma", "Intuition", "Logic",
     "Willpower", "Magic", "Edge"],
    ["Male", 1.05, 1, 1, 1, 1, 1.1, 0.9, 1, 1, 1, 1, 1],
    ["Female", 0.95, 1, 1, 1, 1, 0.9, 1.1, 1, 1, 1, 1, 1],
]

gendermods_nt = namedtuple('gendermod', ['id'] + gendermods[0])
gendermods_dict = OrderedDict([(entry[0], gendermods_nt(*([i] + entry))) for i, entry in enumerate(gendermods[1:])])

attributes = [
    ["name", "base", "description", "factor", "signmod", "kind"],
    ["Size", 1.75, "size of a character in meteres", 5000, -1, "special"],
    ["Weight", 75, "weight of the character in kg", 1000, -1, "special"],
    ["Agility", 30, "speed of muscle movement, dexterity of limbs..", 3000, 1, "physical"],
    ["Constitution", 30, "ability to endure fatigue, bodily toughness, resistance to poinson and disease", 3000, 1,
     "physical"],
    ["Coordination", 30, "ability to coordinate agility and strength", 3000, 1, "physical"],
    ["Strength", 30, "raw physical strength", 3000, 1, "physical"],
    ["Charisma", 30, "empathy, ability to influence others", 3000, 1, "mental"],
    ["Intuition", 30, "unconsciousness thinking, ability to recognize patterns", 3000, 1, "mental"],
    ["Logic", 30, "raw mental processing power", 3000, 1,  "mental"],
    ["Willpower", 30, "ability to resist temptations and influence of others", 3000, 1, "mental"],
    ["Magic", 30, "the ability to channel magic", 3000, 1, "special"],
    ["Edge", 30, "luck, the ability to excel in dangerous situations", 3000, 1, "special"],
]

attributes_nt = namedtuple('attribute', ['id'] + attributes[0])
attributes_dict = OrderedDict([(entry[0], attributes_nt(*([i] + entry))) for i, entry in enumerate(attributes[1:])])

skills = [
    ["name", "parent", "expweight", 'kind'],
    ["Combat", None, 8.44, None],
    ["Armed Combat", "Combat", 2.25, None],
    ["Impact Weapons", "Armed Combat", 1, 'active'],
    ["Piercing Weapons", "Armed Combat", 1, 'active'],
    ["Slashing Weapons", "Armed Combat", 1, 'active'],
    ["Unarmed Combat", "Combat", 1.5, None],
    ["Brawling", "Unarmed Combat", 1, 'active'],
    ["Wrestling", "Unarmed Combat", 1, 'active'],
    ["Thrown Weapons", "Combat", 2.25, None],
    ["Aerodynamics", "Thrown Weapons", 1, 'active'],
    ["Axes", "Thrown Weapons", 1, 'active'],
    ["Balls", "Thrown Weapons", 1, 'active'],
    ["Ranged Weapons", "Combat", 5.25, None],
    ["Archery", "Ranged Weapons", 1, 'active'],
    ["Pistols", "Ranged Weapons", 1, 'active'],
    ["Automatics", "Ranged Weapons", 1, 'active'],
    ["Long Rifles", "Ranged Weapons", 1, 'active'],
    ["Indirect Fire", "Ranged Weapons", 1, 'active'],
    ["Launch Weapons", "Ranged Weapons", 1, 'active'],
    ["Spray Weapons", "Ranged Weapons", 1, 'active'],
    ["Physical", None, 8.44, None],
    ["Acrobatics", "Physical", 2.5, None],
    ["Balance", "Acrobatics", 1, 'active'],
    ["Dodge", "Acrobatics", 1, 'active'],
    ["Athletics", "Physical", 2., None],
    ["Climbing", "Athletics", 0.5, 'active'],
    ["Jumping", "Athletics", 0.5, 'active'],
    ["Lifting", "Athletics", 0.5, 'active'],
    ["Running", "Athletics", 0.5, 'active'],
    ["Swimming", "Athletics", 0.5, 'active'],
    ["Carouse", "Physical", 0.75, None],
    ["Perform", "Physical", 1.5, None],
    ["Dancing", "Perform", 1, 'active'],
    ["Singing", "Perform", 1, 'active'],
    ["Stealth", "Physical", 2.25, None],
    ["Hideing", "Stealth", 1, 'active'],
    ["Shadowing", "Stealth", 1, 'active'],
    ["Sneaking", "Stealth", 1, 'active'],
    ["Sleight of Hand", "Physical", 2.25, None],
    ["Lockpicking", "Sleight of Hand", 1, 'active'],
    ["Pickpocketing", "Sleight of Hand", 1, 'active'],
    ["Quickdrawing", "Sleight of Hand", 1, 'active'],
    ["Processing", None, 7.31, None],
    ["Art", "Processing", 1.5, None],
    ["Painting", "Art", 1, 'active'],
    ["Sculpting", "Art", 1, 'active'],
    ["Composure", "Processing", 1.5, None],
    ["Mental Composure", "Composure", 1, None],
    ["Physical Composure", "Composure", 1, None],
    ["Memory", "Processing", 1, None],
    ["Navigation", "Processing", 2.25, None],
    ["Orientation", "Navigation", 1, 'passive'],
    ["Land", "Navigation", 0.5, 'passive'],
    ["Sea", "Navigation", 0.5, 'passive'],
    ["Space", "Navigation", 0.5, 'passive'],
    ["Air", "Navigation", 0.5, 'passive'],
    ["Perception", "Processing", 2.25, None],
    ["Aural", "Perception", 1, 'passive'],
    ["Olfactorial", "Perception", 0.5, 'passive'],
    ["Tactile", "Perception", 0.5, 'passive'],
    ["Visual", "Perception", 1, 'passive'],
    ["Judge Person", "Processing", 2.25, None],
    ["Guess Intentions", 'Judge Person', 1, 'passive'],
    ["Detect Deceit", "Judge Person", 1, 'passive'],
    ["Interrogation", "Judge Person", 1, 'passive'],
    ["Empathy", None, 8.44, None],
    ["Act", "Empathy", 1.5, None],
    ["Theatrical", "Act", 1, 'active'],
    ["Impersonation", "Act", 1, 'active'],
    ["Animal Controll", "Empathy", 1.5, None],
    ["Animal Training", "Animal Controll", 1, 'passive'],
    ["Animal Riding", "Animal Controll", 1, 'active'],
    ["Discussion", "Empathy", 2.25, None],
    ["Convince", "Discussion", 1, 'passive'],
    ["Instruction", "Discussion", 1, 'passive'],
    ["Negotiation", "Discussion", 1, 'passive'],
    ["Interaction", "Empathy", 3.75, None],
    ["Deception", "Interaction", 1, 'passive'],
    ["Intimidation", "Interaction", 1, 'passive'],
    ["Leadership", "Interaction", 1, 'passive'],
    ["Persuasion", "Interaction", 1, 'passive'],
    ["Oratory", "Interaction", 1, 'passive'],
    ["Etiquette", "Empathy", 2.25, None],
    ["Academic", "Etiquette", 0.5, 'passive'],
    ["Corporate", "Etiquette", 0.5, 'passive'],
    ["Criminals", "Etiquette", 0.5, 'passive'],
    ["Scene", "Etiquette", 0.5, 'passive'],
    ["Security", "Etiquette", 0.5, 'passive'],
    ["Street", "Etiquette", 0.5, 'passive'],
    ["Magic", None, 8.46, None],
    ["Assensing", "Magic", 1, 'magic'],
    ["Astral Combat", "Magic", 1, 'magic'],
    ["Sorcery", "Magic", 3, 'magic'],
    ["Spellcasting", "Sorcery", 2, 'magic'],
    ["Counterspelling", "Sorcery", 1, 'magic'],
    ["Ritual Magic", "Sorcery", 1, 'magic'],
    ["Invocation", "Magic", 2.25, 'magic'],
    ["Binding", "Invocation", 1, 'magic'],
    ["Banishing", "Invocation", 1, 'magic'],
    ["Summoning", "Invocation", 1, 'magic'],
    ["Alchemy", "Magic", 1, 'magic'],
    ["Metamagic", "Magic", 3, 'magic'],
    ["Matrix", None, 5.63, None],
    ["Computers", "Matrix", 3, None],
    ["Data Search", "Computers", 1, 'passive'],
    ["Programming", "Computers", 1, 'passive'],
    ["Computer Use", "Computers", 2, 'passive'],
    ["Hacking", "Matrix", 4.5, None],
    ["Cracking", "Hacking", 2, 'passive'],
    ["Cybercombat", "Hacking", 1, 'passive'],
    ["Decryption", "Hacking", 1, 'passive'],
    ["Matrix Security", "Hacking", 2, 'passive'],
    ["Technical", None, 7.88, None],
    ["Chemistry", "Technical", 1.5, None],
    ["Toxins", "Chemistry", 1, 'passive'],
    ["Demolitions", "Chemistry", 1, 'passive'],
    ["Electronics", "Technical", 3, None],
    ["Maglocks", "Electronics", 1, 'passive'],
    ["Sensors", "Electronics", 1, 'passive'],
    ["Optical Computers", "Electronics", 1, 'passive'],
    ["Electronic Warfare", "Electronics", 1, 'passive'],
    ["Mechanics", "Technical", 2.25, None],
    ["Locks", "Mechanics", 1, 'passive'],
    ["Weapons", "Mechanics", 1, 'passive'],
    ["Traps", "Mechanics", 1, 'passive'],
    ["Medics", "Technical", 2.25, 'passive'],
    ["Cybernetics", "Medics", 1, 'passive'],
    ["Extended Care", "Medics", 1, 'passive'],
    ["First Aid", "Medics", 1, 'passive'],
    ["Social", "Technical", 1.5, None],
    ["Disguise", "Social", 1, 'passive'],
    ["Forgery", "Social", 1, 'passive'],
    ['Locomotion', None, 6.19, None],
    ['Vehicle Mechanics', 'Locomotion', 3, None],
    ["Ground Vehicle Mechanics", "Vehicle Mechanics", 1, 'passive'],
    ["Airborne Vehicle Mechanics", "Vehicle Mechanics", 1, 'passive'],
    ["Spacecraft Mechanics", "Vehicle Mechanics", 1, 'passive'],
    ["Watercraft Mechanics", "Vehicle Mechanics", 1, 'passive'],
    ["Pilot", "Locomotion", 5.25, None],
    ["Airplane", "Pilot", 1, 'active'],
    ["Hovercraft", "Pilot", 1, 'active'],
    ["Helicopter", "Pilot", 1, 'active'],
    ["Submarine", "Pilot", 1, 'active'],
    ["Thrust", "Pilot", 1, 'active'],
    ["Watercraft", "Pilot", 1, 'active'],
    ["Wheeled", "Pilot", 1, 'active'],
]

skills_nt = namedtuple('skill', ['id'] + skills[0])
skills_dict = OrderedDict([(entry[0], skills_nt(*([i] + entry))) for i, entry in enumerate(skills[1:])])

skill_attribmods = [['skill', 'Agility', 'Constitution', 'Coordination', 'Strength', 'Weight',
                     'Charisma', 'Intuition', 'Logic', 'Willpower', 'Magic', 'Size'],
                    ["Combat", 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0, 0, 0],
                    ["Armed Combat", 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0, 0, 0],
                    ["Impact Weapons", 0.5, 0, 0.5, 0, 0, 0, 0., 0, 0, 0, 0],
                    ["Piercing Weapons", 0.25, 0, 0.25, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Slashing Weapons", 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0, 0, 0],
                    ["Unarmed Combat", 0.25, 0, 0.5, 0.25, 0, 0, 0., 0, 0, 0, 0],
                    ["Brawling", 0.5, 0, 0.25, 0.25, 0, 0, 0.0, 0, 0, 0, 0],
                    ["Wrestling", 0.0, 0, 0.5, 0.5, 0, 0, 0.0, 0, 0, 0, 0],
                    ["Thrown Weapons", 0.25, 0, 0.375, 0, 0, 0, 0.375, 0, 0, 0, 0],
                    ["Aerodynamics", 0.25, 0, 0.375, 0, 0, 0, 0.375, 0, 0, 0, 0],
                    ["Axes", 0.5, 0, 0.25, 0, 0, 0, 0.25, 0, 0, 0, 0],
                    ["Balls", 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0, 0, 0],
                    ["Ranged Weapons", 0.25, 0, 0.375, 0, 0, 0, 0.375, 0, 0, 0, 0],
                    ["Archery", 0.5, 0, 0.25, 0, 0, 0, 0.25, 0, 0, 0, 0],
                    ["Pistols", 0.125, 0, 0.5, 0, 0, 0, 0.375, 0, 0, 0, 0],
                    ["Automatics", 0, 0, 0.75, 0, 0, 0, 0.25, 0, 0, 0, 0],
                    ["Long Rifles", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Indirect Fire", 0, 0, 0.25, 0, 0, 0, 0.25, 0.5, 0, 0, 0],
                    ["Launch Weapons", 0, 0, 0, 0, 0, 0, 0.25, 0.75, 0, 0, 0],
                    ["Spray Weapons", 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0],
                    ["Physical", 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Acrobatics", 0.5, 0, 0.5, 1, -1, 0, 0, 0, 0, 0, 0],
                    ["Balance", 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Dodge", 0.5, 0, 0., 1, -1, 0, 0.5, 0, 0, 0, 0],
                    ["Athletics", 0.75, 0, 0.25, 1, -1, 0, 0, 0, 0, 0, 0],
                    ["Climbing", 0, 0.5, 0.5, 1.5, -1.5, 0, 0, 0, 0, 0, 0],
                    ["Jumping", 0.75, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Lifting", 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Running", 0.5, 0.5, 0, 1, -1, 0, 0, 0, 0, 0, 0],
                    ["Swimming", 0.25, 0.5, 0.25, 1, -1, 0, 0, 0, 0, 0, 0],
                    ["Carouse", 0, 1., 0, 0, 0.5, 0, 0, 0, 0, 0, 0],
                    ["Perform", 0, 0, 0, 0.25, 0, 0.75, 0, 0, 0, 0, 0],
                    ["Dancing", 0.25, 0, 0.25, 0., 0, 0.5, 0, 0, 0, 0, 0],
                    ["Singing", 0, 0, 0.25, 0, 0, 0.75, 0, 0, 0, 0, 0],
                    ["Stealth", 0, 0, .75, 0, 0, 0, 0.25, 0, 0, 0, 0],
                    ["Hideing", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Shadowing", 0.25, 0, 0.25, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Sneaking", 0.25, 0, 0.75, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Sleight of Hand", 0.25, 0, 0.75, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Lockpicking", 0.25, 0, 0.75, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Pickpocketing", 0.25, 0, 0.5, 0, 0, 0, 0.25, 0, 0, 0, 0],
                    ["Quickdrawing", 0.75, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0],
                    ["Processing", 0, 0, 0, 0, 0, 0, .75, 0, 0.25, 0, 0],
                    ["Art", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Painting", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Sculpting", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0],
                    ["Composure", 0, 0, 0.25, 0, 0, 0, 0., 0, 0.75, 0, 0],
                    ["Mental Composure", 0, 0, 0, 0, 0, 0, 0., 0, 1, 0, 0],
                    ["Physical Composure", 0, 0, 0.5, 0, 0, 0, 0., 0, 0.5, 0, 0],
                    ["Memory", 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25, 0, 0],
                    ["Navigation", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Orientation", 0, 0, 0, 0, 0, 0, 0.75, 0.25, 0, 0, 0],
                    ["Land", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Sea", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Space", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Air", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Perception", 0, 0, 0, 0, 0, 0, 1., 0, 0, 0, 0],
                    ["Aural", 0, 0, 0, 0, 0, 0, 1., 0, 0, 0, 0],
                    ["Olfactorial", 0, 0, 0, 0, 0, 0, 1., 0, 0, 0, 0],
                    ["Tactile", 0, 0, 0, 0, 0, 0, 1., 0, 0, 0, 0],
                    ["Visual", 0, 0, 0, 0, 0, 0, 1., 0, 0, 0, 0],
                    ["Assensing", 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5, 0],
                    ["Judge Person", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Guess Intentions", 0, 0, 0, 0, 0, 0, .5, 0.5, 0, 0, 0],
                    ["Detect Deceit", 0, 0, 0, 0, 0, 0, .25, 0.75, 0, 0, 0],
                    ["Interrogation", 0, 0, 0, 0, 0, 0, .25, 0.75, 0, 0, 0],
                    ["Empathy", 0, 0, 0, 0, 0, 1., 0, 0, 0, 0, 0],
                    ["Act", 0, 0, 0.25, 0, 0, 0.75, 0, 0, 0, 0, 0],
                    ["Theatrical", 0, 0, 0.25, 0, 0, 0.5, 0, 0.25, 0, 0, 0],
                    ["Impersonation", 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0, 0],
                    ["Animal Controll", 0, 0, 0, 0, 0, 0.75, 0.25, 0, 0, 0, 0],
                    ["Animal Training", 0, 0, 0, 0, 0, 0.5, 0.25, 0.25, 0, 0, 0],
                    ["Animal Riding", 0, 0, 0.5, 0, 0, 0.5, 0., 0, 0, 0, 0],
                    ["Discussion", 0, 0, 0, 0, 0, 0.5, 0, 0.5, 0, 0, 0],
                    ["Convince", 0, 0, 0, 0, 0, 0.5, 0, 0.5, 0, 0, 0],
                    ["Instruction", 0, 0, 0, 0, 0, 0.25, 0, 0.75, 0, 0, 0],
                    ["Negotiation", 0, 0, 0, 0, 0, 0.25, 0, 0.25, 0.5, 0, 0],
                    ["Interaction", 0, 0, 0, 0, 0, 0.75, 0.25, 0, 0, 0, 0],
                    ["Deception", 0, 0, 0, 0, 0, .5, 0.25, 0.25, 0, 0, 0],
                    ["Intimidation", 0, 0, 0, 0, 0, .25, 0, 0, 0.75, 0, 0],
                    ["Leadership", 0, 0, 0, 0, 0, 0.75, 0., 0, 0.25, 0, 0],
                    ["Persuasion", 0, 0, 0, 0, 0, .75, 0., 0.25, 0, 0, 0],
                    ["Oratory", 0, 0, 0, 0, 0, .5, 0, 0.5, 0, 0, 0],
                    ["Etiquette", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Academic",  0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Corporate", 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Criminals",  0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Scene",  0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Security",  0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Street",  0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0],
                    ["Magic", 0, 0, 0, 0, 0, 0, 0, 0, 0, 1., 0],
                    ["Astral Combat", 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5, 0],
                    ["Sorcery", 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, .5, 0],
                    ["Spellcasting", 0, 0, 0, 0, 0, 0, 0.5, 0., 0, .5, 0],
                    ["Counterspelling", 0, 0, 0, 0, 0, 0, 0.5, 0., 0, .5, 0],
                    ["Ritual Magic", 0, 0, 0, 0, 0, 0, 0., .5, 0, .5, 0],
                    ["Invocation", 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, .5, 0],
                    ["Binding", 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, .5, 0],
                    ["Banishing", 0, 0, 0, 0, 0, 0, 0, 0, .5, .5, 0],
                    ["Summoning", 0, 0, 0, 0, 0, .5, 0, 0, 0, .5, 0],
                    ["Alchemy", 0, 0, 0, 0, 0, 0, 0, .5, 0, 0.5, 0],
                    ["Metamagic", 0, 0, 0, 0, 0, 0, 0, 0., 0, 0., 0],
                    ["Matrix", 0, 0, 0, 0, 0, 0, 0.25, 0.75, 0, 0., 0],
                    ["Computers", 0, 0, 0, 0, 0, 0, 0.25, 0.75, 0, 0., 0],
                    ["Data Search", 0, 0, 0, 0, 0, 0, 0.5, .5, 0, 0., 0],
                    ["Programming", 0, 0, 0, 0, 0, 0, 0.25, .75, 0, 0., 0],
                    ["Computer Use", 0, 0, 0, 0, 0, 0, 0.25, .75, 0, 0., 0],
                    ["Hacking", 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25, 0, 0],
                    ["Cracking", 0, 0, 0, 0, 0, 0, 0.25, 0.75, 0, 0., 0],
                    ["Cybercombat", 0, 0, 0, 0, 0, 0, 0., .75, 0.25, 0., 0],
                    ["Decryption", 0, 0, 0, 0, 0, 0, 0., 1., 0, 0., 0],
                    ["Matrix Security", 0, 0, 0, 0, 0, 0, 0.25, 0.75, 0, 0., 0],
                    ["Technical", 0, 0, 0.25, 0, 0, 0, 0.25, 0.5, 0, 0., 0],
                    ["Chemistry", 0, 0, 0.25, 0, 0, 0, 0.25, .5, 0, 0., 0],
                    ["Toxins", 0, 0, 0, 0, 0, 0, 0.25, .75, 0, 0., 0],
                    ["Demolitions", 0, 0, 0.25, 0, 0, 0, 0.25, .5, 0, 0., 0],
                    ["Electronics", 0, 0, 0.25, 0, 0, 0, 0.25, .5, 0, 0., 0],
                    ["Maglocks", 0, 0, 0.5, 0, 0, 0, 0.25, .25, 0, 0., 0],
                    ["Sensors", 0, 0, 0.5, 0, 0, 0, 0.25, .25, 0, 0., 0],
                    ["Optical Computers", 0, 0, 0.25, 0, 0, 0, 0.25, .5, 0, 0., 0],
                    ["Electronic Warfare", 0, 0, 0, 0, 0, 0, 0.5, .5, 0, 0., 0],
                    ["Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Locks", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Weapons", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Traps", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Medics", 0, 0, 0.25, 0, 0, 0, 0, 0.75, 0, 0., 0],
                    ["Cybernetics", 0, 0, 0.25, 0, 0, 0, 0, 0.75, 0, 0., 0],
                    ["Extended Care", 0, 0, 0., 0, 0, 0, 0.25, 0.75, 0, 0., 0],
                    ["First Aid", 0, 0, 0.5, 0, 0, 0, 0.25, 0.25, 0, 0., 0],
                    ["Social", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Disguise", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Forgery", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Locomotion", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Vehicle Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Ground Vehicle Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Airborne Vehicle Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Spacecraft Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Watercraft Mechanics", 0, 0, 0.5, 0, 0, 0, 0, 0.5, 0, 0., 0],
                    ["Pilot", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Airplane", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Hovercraft", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Helicopter", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Submarine", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Thrust", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Watercraft", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
                    ["Wheeled", 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0., 0],
]

skill_attribmods_nt = namedtuple('skill_attribmod', ['id'] + skill_attribmods[0])
skills_attribmods_dict = OrderedDict(
    [(entry[0], skill_attribmods_nt(*([i] + entry))) for i, entry in enumerate(skill_attribmods[1:])])

actions = [
    ["name", "category", "cost", "reaction"],
    ["Walk", "move", 'No', False],
    ["Run", "move", 'No', False],
    ["Sprint", "move", 'Complex', False],
    ["Jump", "move", 'Simple', False],
    ["Climb", "move", 'Complex', False],
    ["Swim", "move", 'Complex', False],
    ["Crouch Walk", 'move', 'No', False],
    ["Crawl", "move", 'Complex', False],
    ["Jump for Cover", "move", 'Simple',  True],

    ["Dodge", "move", 'Free',  True],
    ["Crouch", "shift", 'Free', False],
    ["Stand", "shift", 'Simple', False],
    ["Stand Up", "shift", 'Complex', False],
    ["Jump Up", "shift", 'Simple', False],
    ["Drop Down", "shift", 'Free', True],
    ["Get Down", "shift", 'Simple', False],
    ["Turn", "shift", 'Free', False],
    ["Peek", "shift", 'Free', False],
    ["Duck Back", "shift", 'Free', True],
    ["Take Cover", "shift", 'Simple', False],

    ["Interrupt", "meta", 'Free', False],
    ["Postpone", "meta", 'Simple', False],
    ["Delay", "meta", 'Complex', False],
    ["Overwatch", "meta", 'Complex', False],

    ["Melee Attack", "melee combat", 'Complex', False],
    ["Parry", "melee combat", 'Free', True],

    ["Single Shot", "ranged combat", 'Simple', False],
    ["Fast Shots", "ranged combat", 'Complex', False],
    ["Burst Shot", "ranged combat", 'Simple', False],
    ["Short FA Burst", "ranged combat", 'Simple', False],
    ["Long FA Burst", "ranged combat", 'Complex', False],
    ["Brace Weapon", "ranged combat", 'Simple', False],
    ["Throw Weapon", "ranged combat", 'Simple', False],
    ["Evasive Action", "ranged combat", 'Simple', False],

    ["Target", "ranged combat", 'Free', False],
    ["Sight", "ranged combat", 'Simple', False],
    ["Aim", "ranged combat", 'Simple', False],

    ["Evade", "combat", 'Free', False],
    ["Draw Weapon", "combat", 'Simple', False],
    ["Reload", "combat", 'Complex', False],

    ["Observe", "general", 'Complex', False],

    ["Cast", "astral", 'Complex', False],
    ["Counterspell", "astral", 'Simple', True],
    ["Banish", "astral", 'Complex', False],
    ["Sustain", "astral", 'No', False],

    ["Matrix Action", "matrix", 'Complex', False],
]

matrix_attributes = [
    ["name", "description"],
    ["Processor", "Raw processing power"],
    ["System", "System quality"],
    ["Firewall", "Ability to resist illegal action"],
    ["Uplink", "Maximal bandwidth and latency"],
    ["Signal", "Strength of wireless signal"],
]

programmes = [
    ["name", "skill", "attribute"],
    ["Search", "Data Search", "Processor"],
    ["Stealth", "Cracking", "System"],
    ["Scan", "Electronic Warfare", "Signal"],
    ["Analyze", "Computer Use", "System"],
    ["Access", "Computer Use", "System"],
    ["Exploit", "Cracking", "System"],
    ["Crypt", "Computer Use", "System"],
    ["Break", "Decryption", "Processor"],
    ["Edit", "Computer Use", "System"],
    ["Control", "Computer Use", "System"],
    ["Find", "Computer Use", "Uplink"],
    ["Corrupt", "Cybercombat", "Processor"],
    ["Medic", "Programming", "System"],
]

programmes_nt = namedtuple('programme', ['id'] + programmes[0])
programmes_dict = OrderedDict([(entry[0], programmes_nt(*([i] + entry))) for i, entry in enumerate(programmes[1:])])

matrix_actions = [
    ["name", "programme", "prerequisite"],
    ["Find Node", "Find", "AID"],
    ["Find Wireless Node", "Scan", ""],
    ["Find Process", "Find", "Node Access"],
    ["Find File", "Find", "Node Access"],
    ["Find Stream", "Find", "Node Access"],
    ["Find Wireless Stream", "Scan", ""],
    ["Analyze Node", "Analyze", "Found Node"],
    ["Analyze Process", "Analyze", "Found Process"],
    ["Analyze File", "Analyze", "Found File"],
    ["Analyze Stream", "Analyze", "Found Stream"],
    ["Access Node", "Access", "Found Node"],
    ["Access Process", "Access", "Found Process"],
    ["Access File", "Access", "Found File"],
    ["Access Stream", "Access", "Found Stream"],
    ["Encrypt File", "Crypt", "File Access"],
    ["Decrypt File", "Crypt", "File Access, Key"],
    ["Break File", "Break", "File Access"],
    ["Encrypt Stream", "Crypt", "Stream Access"],
    ["Decrypt Stream", "Crypt", "Stream Access, Key"],
    ["Break Stream", "Break", "Stream Access"],
    ["Edit Account", "Edit", "Node Access"],
    ["Edit Subscription List", "Edit", "Node Access"],
    ["Edit Log", "Edit", "Node Access"],
    ["Edit Process Account", "Edit", "Process Access"],
    ["Edit File", "Edit", "File Access"],
    ["Edit Stream", "Edit", "Stream Access"],
    ["Start Process", "Control", "Node Access"],
    ["Stop Process", "Control", "Found process"],
    ["Shutdown Node", "Control", "Node Access"],
    ["Change Alarm Status", "Edit", "Node Access"],
    ["Create File", "Control", "Node Access"],
    ["Delete File", "Control", "Found File"],
    ["Control Process", "Control", "Process Access"],
    ["Change Stream Path", "Control", "Relay Node Access"],
    ["Terminate Stream", "Control", "Relay Node Access"],
    ["Slow Node", "Corrupt", "Found Node"],
    ["Crash Node", "Corrupt", "Found Node"],
    ["Slow Process", "Corrupt", "Found Process"],
    ["Crash Process", "Corrupt", "Found Process"],
    ["Corrupt File", "Corrupt", "Found File"],
    ["Corrupt Stream", "Corrupt", "Found Stream"],
    ["Repair Process", "Medic", "Process Access"],
    ["Repair Node", "Medic", "Node Access"],
    ["Jam Stream", "Scan", "Found Stream in Signal Range"],
    ["Exploit", "Exploit", "None"]
]

matrix_actions_nt = namedtuple('matrix_action', ['id'] + matrix_actions[0])
matrix_actions_dict = OrderedDict(
    [(entry[0], matrix_actions_nt(*([i] + entry))) for i, entry in enumerate(matrix_actions[1:])])

main_bodyparts = ['Head', 'Upper Torso', 'Lower Torso', 'Left Arm', 'Right Arm', 'Left Leg', 'Right Leg']

bodyparts = [
    ["name", "template", "parent", "level", "weightfrac", "sizefrac", "essencefrac",
     "agilityfrac", "coordinationfrac", "strengthfrac", "constitutionfrac"],
    ["Body", "human", None, 0, 1., 1., 1, 1., 1., 1., 1., ],
    ["Head", "human", "Body", 1, 1/11., 1/11., 0.25, 0.255, 0.2, 0., 0.1, ],
    ["Brain", "human", "Head", 2, 0.2, 0.2, 0., 0., 0., 0., 0., ],
    ["Vertebrae", "human", "Head", 2, 0.2, 0.2, 0.45, 1., 0.5, 0., 0., ],
    ["Eyes", "human", "Head", 2, 0.05, 0.05, 0.2, 0., 0., 0., 0., ],
    ["Ears", "human", "Head", 2, 0.05, 0.05, 0.1, 0., 0.5, 0., 0., ],
    ["Olfactory System", "human", "Head", 2, 0.05, 0.05, 0.05, 0., 0., 0., 0., ],
    ["Tongue", "human", "Head", 2, 0.05, 0.05, 0.05, 0., 0., 0., 0., ],
    ["* Bones", "human", "Head", 2, 0.3, 0.4, 0.1, 0., 0., 0., 1., ],
    ["* Skin", "human", "Head", 2, 0.1, 0., 0.05, 0., 0., 0., 0., ],
    ["Upper Torso", "human", "Body", 1, 2/11., 2/11., 0.15, 0.125, 0.0, 0.2, 0.3, ],
    ["Lungs", "human", "Upper Torso", 2, 0.1, 0.1, 0.1, 0., 0., 0.0, 0.3, ],
    ["Heart", "human", "Upper Torso", 2, 0.1, 0.1, 0.2, 0., 0., 0.0, 0.2, ],
    ["* Muscles", "human", "Upper Torso", 2, 0.3, 0.3, 0.3, 0.4, 0.2, 0.9, 0.3, ],
    ["* Bones", "human", "Upper Torso", 2, 0.3, 0.5, 0.2, 0., 0., 0.1, 0.2, ],
    ["* Nerves", "human", "Upper Torso", 2, 0., 0., 0.1, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Upper Torso", 2, 0.2, 0., 0.1, 0., 0., 0., 0., ],
    ["Lower Torso", "human", "Body", 1, 2/11., 2/11., 0.15, 0.05, 0.0, 0.05, 0.1, ],
    ["Intestines", "human", "Lower Torso", 2, 0.5, 0.4, 0.3, 0.0, 0.0, 0.0, 0.3, ],
    ["* Muscles", "human", "Lower Torso", 2, 0.25, 0.3, 0.3, 0.4, 0.2, 0.9, 0.2, ],
    ["* Bones", "human", "Lower Torso", 2, 0.1, 0.3, 0.2, 0., 0., 0.1, 0.5, ],
    ["* Nerves", "human", "Lower Torso", 2, 0., 0, 0.1, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Lower Torso", 2, 0.15, 0., 0.1, 0., 0., 0., 0., ],
    ["Left Arm", "human", "Body", 1, 1/11., 1/11., 0.125, 0.15, 0.3, 0.225, 0.1, ],
    ["* Muscles", "human", "Left Arm", 2, 0.6, 0.6, 0.4, 0.4, 0.2, 0.9, 0.5, ],
    ["* Bones", "human", "Left Arm", 2, 0.2, 0.4, 0.2, 0., 0., 0.1, 0.5, ],
    ["* Nerves", "human", "Left Arm", 2, 0., 0., 0.3, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Left Arm", 2, 0.2, 0., 0.1, 0., 0., 0., 0., ],
    ["Right Arm", "human", "Body", 1, 1/11., 1/11., 0.125, 0.15, 0.3, 0.225, 0.1, ],
    ["* Muscles", "human", "Right Arm", 2, 0.6, 0.6, 0.4, 0.4, 0.2, 0.9, 0.5, ],
    ["* Bones", "human", "Right Arm", 2, 0.2, 0.4, 0.2, 0., 0., 0.1, 0.5, ],
    ["* Nerves", "human", "Right Arm", 2, 0., 0., 0.3, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Right Arm", 2, 0.2, 0., 0.1, 0., 0., 0., 0., ],
    ["Left Leg", "human", "Body", 1, 2/11., 2/11., 0.1, 0.15, 0.1, 0.15, 0.15, ],
    ["* Muscles", "human", "Left Leg", 2, 0.6, 0.6, 0.4, 0.4, 0.2, 0.9, 0.5, ],
    ["* Bones", "human", "Left Leg", 2, 0.2, 0.4, 0.2, 0., 0., 0.1, 0.5, ],
    ["* Nerves", "human", "Left Leg", 2, 0., 0., 0.3, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Left Leg", 2, 0.2, 0., 0.1, 0., 0., 0., 0., ],
    ["Right Leg", "human", "Body", 1, 2/11., 2/11., 0.1, 0.15, 0.1, 0.15, 0.15, ],
    ["* Muscles", "human", "Right Leg", 2, 0.6, 0.6, 0.4, 0.4, 0.2, 0.9, 0.5, ],
    ["* Bones", "human", "Right Leg", 2, 0.2, 0.4, 0.2, 0., 0., 0.1, 0.5, ],
    ["* Nerves", "human", "Right Leg", 2, 0., 0., 0.3, 0.6, 0.8, 0., 0., ],
    ["* Skin", "human", "Right Leg", 2, 0.2, 0., 0.1, 0., 0., 0., 0., ],
]

bodyparts_nt = namedtuple('bodypart', ['id'] + bodyparts[0])
replace_stars(bodyparts)
bodyparts_dict = OrderedDict([(entry[0], bodyparts_nt(*([i] + entry))) for i, entry in enumerate(bodyparts[1:])])


computer = [
    ["name", "Processor", "System", "Uplink", "Signal", "Volume"],
    ['Nano Drone Computer I', 1, 20, 35, 20, 0.0000000002],
    ['Nano Drone Computer II', 5, 30, 40, 25, 0.0000000002],
    ['Nano Drone Computer III', 10, 40, 50, 30, 0.0000000002],
    ['Mini Drone Computer I', 15, 25, 35, 25, 0.0000001],
    ['Mini Drone Computer II', 20, 30, 40, 30, 0.0000001],
    ['Mini Drone Computer III', 25, 40, 50, 35, 0.0000001],
    ["Meta Link", 15, 15, 20, 20, 0.00005],
    ["Sony Emperor", 20, 25, 30, 30, 0.00005],
    ["Renraku Sensei", 30, 30, 30, 30, 0.00005],
    ["Erika Elite", 30, 40, 40, 40, 0.00005],
    ["Transys Avalon", 40, 50, 50, 40, 0.00005],
    ["Fairlight Caliban", 45, 60, 60, 45, 0.00005],
    ["Erika MCD-1", 30, 30, 30, 40, 0.005],
    ["Hermes Chariot", 40, 40, 40, 40, 0.005],
    ["Novatech Navigator", 45, 45, 45, 45, 0.005],
    ["Renraku Tsurugi", 50, 50, 50, 50, 0.005],
    ["Sony CIY-720", 55, 55, 55, 50, 0.005],
    ["Fairlight Excalibur", 65, 65, 60, 50, 0.005],
    ["Small Business Tower", 40, 30, 30, 0, 0.128],
    ["Medium Business Tower", 50, 40, 40, 0, 0.128],
    ["Cheap Mainframe", 60, 30, 40, 0, 2],
    ["Expensive Mainframe", 60, 40, 50, 0, 2],
    ["Super Cluster", 100, 60, 60, 0, 5000],
]

computer_nt = namedtuple('computer', ['id'] + computer[0])
computer_dict = OrderedDict([(entry[0], computer_nt(*([i] + entry))) for i, entry in enumerate(computer[1:])])


sensor_packages = [
    ['name', 'content',],
    ['Nano Drone', ['Nano Camera', 'Nano Microphone']],
    ['Micro Drone', ['Micro Camera', 'Mini Microphone']],
    ['Mini Drone', ['Mini Camera', 'Microphone', 'Micro Laser Sensor 50m']],
    ['Civilian Drone', ['Camera', 'Studio Microphone', 'Mini Laser Sensor 150m', 'Micro Radar 50m']],
    ['Civilian Vehicle', ['Camera', 'Studio Microphone', 'Laser Sensor 500m', 'Mini Radar 500m']],
    ['Security Vehicle', ['Camera Suite', 'Microphone Suite', 'Large Laser Sensor 2000m', 'Mini Radar 500m']],
    ['Military Vehicle', ['Camera Suite', 'Microphone Suite', 'Large Laser Sensor 2000m', 'Radar 5000m']],
]

sensor_packages_nt = namedtuple('sensor_package', ['id'] + sensor_packages[0])
sensor_packages_dict = OrderedDict([(entry[0], sensor_packages_nt(*([i] + entry))) for i, entry in enumerate(sensor_packages[1:])])

#Rigger Adaption:
# Compass, Gyro, Acceleration

#Legality: AAA: 10, AA: 20, A: 30, B: 40, C: 50, D: 60, E: 70, Z: Any
#Licenced 40+
#restricted 50+
#Forbidden 70+
Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating, capacity, upgradeables, relative_capacity, aboslute_capacity = 0,0,0,0,0,0,False, 0, [], 0, 0
gameitems = [
    ["name", "clas", "availability", "cost", "weight", "vis_stealth", "scan_stealth", "legality", 'rating', 'capacity', 'upgradeables', 'relative_capacity', 'absolute_capacity'],
    ["Combat Knife", "Close Combat Weapon", 0, 50, 0.25, 35, 10, 20, False, 0, [], 0, 0],
    ["Sword", "Close Combat Weapon", 10, 200, 0.7, 0, -25, 50, False, 0, [], 0, 0],
    ["Scimitar", "Close Combat Weapon", 15, 300, 0.6, 3, -21, 50, False, 0, [], 0, 0],
    ["Rapier", "Close Combat Weapon", 15, 300, 0.5, 5, -20, 30, False, 0, [], 0, 0],
    ["Hammer", "Close Combat Weapon", 0, 100, 2.5, 5, -15, 25, False, 0, [], 0, 0],
    ["Spear", "Close Combat Weapon", 20, 300, 1.0, -10, -10, 50, False, 0, [], 0, 0],
    ["Snap Blades", "Close Combat Weapon", 10, 500, 0.5, 25, 0, 40, False, 0, [], 0, 0],
    ["Mono Whip", "Close Combat Weapon", 60, 5000, 0.2, 40, 70, 80, False, 0, [], 0, 0],
    ["Mono Chainsaw", "Close Combat Weapon", 10, 2100, 3.0, 0, -30, 60, False, 0, [], 0, 0],
    ["Axe", "Close Combat Weapon", 20, 100, 2.0, 3, -20, 40, False, 0, [], 0, 0],
    ["Stun Baton", "Close Combat Weapon", 10, 400, 1, 15, -20, 30, False, 0, [], 0, 0],
    ["Shock Gloves", "Close Combat Weapon", 20, 500, 0.3, 50, 10, 40, False, 0, [], 0, 0],
    ["Extendeable Baton", "Close Combat Weapon", 0, 100, 0.5, 15, 40, 30, False, 0, [], 0, 0],
    ["Katana", "Close Combat Weapon", 15, 500, 1.2, -5, -30, 60, False, 0, [], 0, 0],
    ["Defiance EX Shocker", "Ranged Weapon", 0, 200, 0.5, 30, 10, 10, False, 0, [], 0, 0],
    ["Yamaha Pulsar", "Ranged Weapon", 10, 200, 0.5, 30, 10, 10, False, 0, [], 0, 0],
    ["Streeline Special", "Ranged Weapon", 5, 200, 0.4, 35, 5, 15, False, 0, [], 0, 0],
    ["Raecor Sting", "Ranged Weapon", 40, 500, 0.3, 40, 50, 50, False, 0, [], 0, 0],
    ["Colt America L36", "Ranged Weapon", 0, 150, 0.6, 30, 5, 20, False, 0, [], 0, 0],
    ["Fichetti Security 600", "Ranged Weapon", 10, 450, 0.9, 27, 0, 20, False, 0, [], 0, 0],
    ["Hammerli 620S", "Ranged Weapon", 20, 650, 0.8, 23, 2, 25, False, 0, [], 0, 0],
    ["Yamaha Sakura Fubuki", "Ranged Weapon", 40, 2000, 0.7, 24, -5, 40, False, 0, [], 0, 0],
    ["Ares Predator", "Ranged Weapon", 5, 500, 2.0, 20, -5, 40, False, 0, [], 0, 0],
    ["Ares Viper Slivergun", "Ranged Weapon", 15, 700, 2.2, 20, 10, 40, False, 0, [], 0, 0],
    ["Colt Manhunter", "Ranged Weapon", 5, 350, 2.0, 20, -5, 40, False, 0, [], 0, 0],
    ["Remington Roomsweeper", "Ranged Weapon", 15, 500, 2.0, 18, -5, 40, False, 0, [], 0, 0],
    ["Ruger Super Warhawk", "Ranged Weapon", 5, 300, 2.5, 15, -5, 40, False, 0, [], 0, 0],
    ["Ceska Black Scorpion", "Ranged Weapon", 35 , 550, 1.5, 25, -3, 40, False, 0, [], 0, 0],
    ["Steyr TMP", "Ranged Weapon", 30 , 600, 1.4, 20, 22, 40, False, 0, [], 0, 0],
    ["AK-97 Carbine", "Ranged Weapon", 15, 500, 3.0, 15, -10, 50, False, 0, [], 0, 0],
    ["HK-227X", "Ranged Weapon", 35, 900, 3.0, 15, -10, 50, False, 0, [], 0, 0],
    ["HK MP-5 TX", "Ranged Weapon", 15, 600, 3.0, 15, -10, 50, False, 0, [], 0, 0],
    ["Ingram Smartgun X", "Ranged Weapon", 25, 750, 3.0, 15, -10, 50, False, 0, [], 0, 0],
    ["Uzi IV", "Ranged Weapon", 15, 500, 3.0, 18, -10, 50, False, 0, [], 0, 0],
    ["Mossberg AM-CMDT", "Ranged Weapon", 5, 1200, 4.5, 0, -25, 50, False, 0, [], 0, 0],
    ["Remington 990", "Ranged Weapon", 5, 600, 4.0, 5, -20, 40, False, 0, [], 0, 0],
    ["Battle Rifle", "Ranged Weapon", 35, 2000, 4.0, -3, -28, 65, False, 0, [], 0, 0],
    ["AK-97", "Ranged Weapon", 15, 500, 3.5, 0, -25, 60, False, 0, [], 0, 0],
    ["Ares Alpha", "Ranged Weapon", 45, 2500, 4.5, -5, -30, 70, False, 0, [], 0, 0],
    ["FN HAR", "Ranged Weapon", 25, 1200, 3.5, 0, -25, 60, False, 0, [], 0, 0],
    ["Ruger 100", "Ranged Weapon", 15, 1500, 3.0, -4, 8, 50, False, 0, [], 0, 0],
    ["PJSS Elephant Rifle", "Ranged Weapon", 15, 6000, 5.0, -8, 0, 50, False, 0, [], 0, 0],
    ["Ranger Arms SM-4", "Ranged Weapon", 55, 9200, 3.5, -6, 10, 70, False, 0, [], 0, 0],
    ["Walter MA-2100", "Ranged Weapon", 45, 8000, 3.5, -6, 10, 70, False, 0, [], 0, 0],
    ["Ingram White Knight", "Ranged Weapon", 40,  3000, 5.5, -10, -35, 70, False, 0, [], 0, 0],
    ["GE Vindicator Minigun", "Ranged Weapon", 70, 15000, 9.5, -10, -45, 80, False, 0, [], 0, 0],
    ["Stoner-Ares 202", "Ranged Weapon", 60, 4500, 8.0, -15, -40, 75, False, 0, [], 0, 0],
    ["Ultimax HMG-2", "Ranged Weapon", 65, 12000, 25.0, -20, -45, 80, False, 0, [], 0, 0],
    ["Panther XXL", "Ranged Weapon", 60, 9000, 12.0, -20, -45, 80, False, 0, [], 0, 0],
    ["Ares Thunderstruck Gauss Rifle", "Ranged Weapon", 80, 25000, 14.0, -25, -55, 90, False, 0, [], 0, 0],
    ["Ares Antioch", "Ranged Weapon", 40, 500, 3.0, 0, -15, 70, False, 0, [], 0, 0],
    ["Enfield GL-67", "Ranged Weapon", 40, 4000, 6.0, -10, -25, 75, False, 0, [], 0, 0],
    ["Shuriken", "Ranged Weapon", 20, 100, 0.08, 50, 35, 35, False, 0, [], 0, 0],
    ["Throwing Knife", "Ranged Weapon", 10, 80, 0.1, 40, 30, 25, False, 0, [], 0, 0],
    ["High Explosive Grenade", "Ranged Weapon", 50, 50, 0.5, 30, -10, 70, False, 0, [], 0, 0],
    ["Fragmentation Grenade", "Ranged Weapon", 60, 60, 0.5, 30, -5, 80, False, 0, [], 0, 0],
    ["Flash-Bang", "Ranged Weapon", 30, 40, 0.3, 40, 20, 50, False, 0, [], 0, 0],
    ["Smoke Grenade", "Ranged Weapon", 20, 35, 0.3, 40, 20, 40, False, 0, [], 0, 0],
    ["Thermal Smoke Grenade", "Ranged Weapon", 25, 65, 0.4, 40, 20, 45, False, 0, [], 0, 0],
    ["Multispectrum Smoke Grenade", "Ranged Weapon", 50, 150, 0.4, 40, 20, 50, False, 0, [], 0, 0],
    ["Gas Grenade", "Ranged Weapon", 25, 40, 0.1, 40, 30, 50, False, 1, ['Neuro-Stun', 'Neuro-Stun X', 'Nausea-Gas'], 0, 0],
    ["Bow", "Ranged Weapon", 10, 500, 0.0, -5, 20, 30, False, 0, [], 0, 0],
    ["Orc Bow", "Ranged Weapon", 20, 1000, 30.0, -8, 18, 45, False, 0, [], 0, 0],
    ["Troll Bow", "Ranged Weapon", 30, 2000, 30.0, -10, 15, 50, False, 0, [], 0, 0],
    ["Pistol Crossbow", "Ranged Weapon", 5, 200, 30.0, 20, 0, 35, False, 0, [], 0, 0],
    ["Light Crossbow", "Ranged Weapon", 7, 500, 30.0, 10, -10, 40, False, 0, [], 0, 0],
    ["Heavy Crossbow", "Ranged Weapon", 10, 1000, 30.0, 0, -20, 45, False, 0, [], 0, 0],
    ["Armored Clothing", "Armor", 0, 300, 3.0, 40, 40, 5, False, 0, [], 0, 0],
    ["Armored Pants", "Armor", 0, 200, 2.0, 40, 40, 5, False, 0, [], 0, 0],
    ["Explorer Jumpsuit", "Armor", 0, 400, 4.0, 10, 10, 0, False, 0, [], 0, 0],
    ["Form Fitting Body Armor", "Armor", 40, 5000, 4.0, 60, 50, 15, False, 0, [], 0, 0],
    ["Flak Vest", "Armor", 20, 1000, 3.0, 20, 15, 20, False, 0, [], 0, 0],
    ["Flak Vest with Plates", "Armor", 30.0, 3000, 6.0, 10, -10, 40, False, 0, [], 0, 0],
    ["Armor Jacket", "Armor", 10, 1000, 5.0, 20, 20, 35, False, 0, [], 0, 0],
    ["Armor Pants", "Armor", 10, 500, 3.0, 20, 20, 35, False, 0, [], 0, 0],
    ["Lined Coat", "Armor", 5, 500, 4.0, 35, 35, 25, False, 0, [], 0, 0],
    ["Light Carapace", "Armor", 40, 4000, 9.0, -10, -30, 40, False, 0, [], 0, 0],
    ["Heavy Carapace", "Armor", 45, 6000, 15.0, -20, -40, 50, False, 0, [], 0, 0],
    ["Ballistic Mask", "Armor", 20, 200, .5, -5, 10, 30, False, 0, [], 0, 0],
    ["Biker Helmet", "Armor", 5, 500, 1.0, -10, -20, 0, False, 0, [], 0, 0],
    ["Light Helmet", "Armor", 20, 1000, 1.0, -10, -20, 40, False, 0, [], 0, 0],
    ["Heavy Helmet", "Armor", 30, 1500, 1.50, -15, -25, 50, False, 0, [], 0, 0],
    ['Nano Drone Computer I', "Computer", 80, round(rules.deck_cost(*computer_dict["Nano Drone Computer I"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.00000004],
    ['Nano Drone Computer II', "Computer", 80, round(rules.deck_cost(*computer_dict["Nano Drone Computer II"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.00000004],
    ['Nano Drone Computer III', "Computer", 80, round(rules.deck_cost(*computer_dict["Nano Drone Computer III"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.00000004],
    ['Mini Drone Computer I', "Computer", 80, round(rules.deck_cost(*computer_dict["Mini Drone Computer I"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.0002],
    ['Mini Drone Computer II', "Computer", 80, round(rules.deck_cost(*computer_dict["Mini Drone Computer II"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.0002],
    ['Mini Drone Computer III', "Computer", 80, round(rules.deck_cost(*computer_dict["Mini Drone Computer III"][2:])[-1],0),  2.0, -5, 10, 25, False, 0, [], 0, 0.0002],
    ["Erika MCD-1", "Computer", 30, round(rules.deck_cost(*computer_dict["Erika MCD-1"][2:])[-1],0), 5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Hermes Chariot", "Computer", 35, round(rules.deck_cost(*computer_dict["Hermes Chariot"][2:])[-1],0), 5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Novatech Navigator", "Computer", 40, round(rules.deck_cost(*computer_dict["Novatech Navigator"][2:])[-1],0), 5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Renraku Tsurugi", "Computer", 50, round(rules.deck_cost(*computer_dict["Renraku Tsurugi"][2:])[-1],0), 5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Sony CIY-720", "Computer", 60, round(rules.deck_cost(*computer_dict["Sony CIY-720"][2:])[-1],0),  5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Fairlight Excalibur", "Computer", 80, round(rules.deck_cost(*computer_dict["Fairlight Excalibur"][2:])[-1],0),  5.0, -5, 10, 25, False, 0, [], 0, 7],
    ["Meta Link", "Computer", 0, round(rules.deck_cost(*computer_dict["Meta Link"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Sony Emperor", "Computer", 5, round(rules.deck_cost(*computer_dict["Sony Emperor"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Renraku Sensei", "Computer", 10, round(rules.deck_cost(*computer_dict["Renraku Sensei"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Erika Elite", "Computer", 15, round(rules.deck_cost(*computer_dict["Erika Elite"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Transys Avalon", "Computer", 30, round(rules.deck_cost(*computer_dict["Transys Avalon"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Fairlight Caliban", "Computer", 40, round(rules.deck_cost(*computer_dict["Fairlight Caliban"][2:])[-1],0),  .1, 40, 40, 0, False, 0, [], 0, 0.1],
    ["Small Business Tower", "Computer", 0, round(rules.deck_cost(*computer_dict["Small Business Tower"][2:])[-1],0),  10.0, None, None, 0, False, 0, [], 0, 0],
    ["Medium Business Tower", "Computer", 10, round(rules.deck_cost(*computer_dict["Medium Business Tower"][2:])[-1],0),  10.0, None, None, 0, False, 0, [], 0, 0],
    ["Cheap Mainframe", "Computer", 20, round(rules.deck_cost(*computer_dict["Cheap Mainframe"][2:])[-1],0),  200.0, None, None, 0, False, 0, [], 0, 0],
    ["Expensive Mainframe", "Computer", 30, round(rules.deck_cost(*computer_dict["Expensive Mainframe"][2:])[-1],0),  200.0, None, None, 0, False, 0, [], 0, 0],
    ["Super Cluster", "Computer", 80, round(rules.deck_cost(*computer_dict["Super Cluster"][2:])[-1],0),  None, None, None, 0, False, 0, [], 0, 0],
    ["Optotronics Kit", "Tools", 0, 1000, 3, 10, 50, 0, False, 0, [], 0, 5.],
    ["Vibropicker", "Anti-Security Tools", 30, 500, 0.1, 35, 40, 40, False, 0, [], 0, 0.2],
    ["Mini Welder", "Anti-Security Tools", 0, 250, 0.5, 15, 40, 20, False, 0, [], 0, 1],
    ["Sequencer", "Anti-Security Tools", 30, 30, 0.1, 35, 70, 60, 270, 0, [], 0, 0.2],
    ["Maglock Passkey", "Anti-Security Tools", 30, 30, 0.1, 35, 70, 60, 270, 0, [], 0, 0.2],
    ["Voice Emulator", "Anti-Security Tools", 30, 30, 0.1, 35, 70, 60, 270, 0, [], 0, 0.2],
    ["Fingerprint Emulator", "Anti-Security Tools", 30, 40, 0.2, 35, 70, 60, 360, 0, [], 0, 0.4],
    ["Retina Emulator", "Anti-Security Tools", 40, 80, 0.5, 30, 70, 60, 720, 0, [], 0, 1],
    ["Bio Replicator", "Anti-Security Tools", 40, 100, 0.5, 25, 70, 70, 900, 0, [], 0, 1],
    ["Microfone Deceiver", "Anti-Security Tools", 20, 20, 0.2, 35, 70, 40, 80, 0, [], 0, 0.4],
    ["Camera Deceiver", "Anti-Security Tools", 20, 20, 0.1, 30, 70, 50, 80, 0, [], 0, 0.2],
    ["Nano Case Breaker", "Anti-Security Tools", 40, 500, 0.00075, 30, 70, 50, False, 0, [], 0, 0.0015],
    ["Nano Camera", "Sensors", 0, 100, 0.001, 80, 60, 0, False, 0., [], 0, 0.0002],
    ["Micro Camera", "Sensors", 0, 500, 0.02, 30, 20, 0, False, 0.02,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0.04],
    ["Mini Camera", "Sensors", 0, 150, 0.2, 30, 20, 0, False, 0.2,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0.4],
    ["Camera", "Sensors", 0, 50, 0.5, 30, 20, 0, False, 0.5,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 1.2],
    ["Camera Suite", "Sensors", 0, 2500, 5, None, None, 0, False, 0.5,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0.01, 10],
    ["Nano Microphone", "Sensors", 0, 100, 0.001, 90, 60, 0, False, 0.001, [], 0, 0.0002],
    ["Mini Microphone", "Sensors", 0, 150, 0.01, 70, 40, 0, False, 0.01,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0, 0.02],
    ["Microphone", "Sensors", 0, 50, 0.1, 60, 30, 0, False, 0.1,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0, 0.2],
    ["Studio Microphone", "Sensors", 0, 250, 0.5, 40, 20, 0, False, 0.5,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0, 1],
    ["Microphone Suite", "Sensors", 0, 3000, 0.5, None, None, 0, False, 0.5,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0.005, 5],
    ["Weapon/Cyberware Detector", "Sensors", 20, 250, 2., 0, 20, 50, 250, 0, [], 0, 4.],
    ["Ultrasound Generator", "Sensors", 10, 100, 0, 0, 0, 0, True, 0, [], 0, 0.2],
    ["Micro Laser Sensor 50m", "Sensors", 0, 100, 0.025, 0, 0, 10, True, 0, [], 0, 0.05],
    ["Mini Laser Sensor 150m", "Sensors", 10, 300, 0.1, 0, 0, 10, True, 0, [], 0, 0.2],
    ["Laser Sensor 500m", "Sensors", 20, 1000, 0.5, 0, 0, 10, True, 0, [], 0, 1.],
    ["Large Laser Sensor 2000m", "Sensors",30, 3000, 2, 0, 0, 10, True, 0, [], 0, 4.],
    ["Micro Radar 50m", "Sensors", 40, 2000, 0.5, 0, 0, 30, False, 0, [], 0., 1],
    ["Mini Radar 500m", "Sensors", 30, 1000, 2.5, 0, 0, 40, False, 0, [], 0., 5],
    ["Radar 5000m", "Sensors", 30, 0, 3000, 25, 0, 50, False, 0, [], 0., 50],
    ["Large Radar 50000m", "Sensors", 50, 10000, 250, 0, 0, 60, False, 0, [], 0., 500],
    ["Chem Sniffer", "Sensors", 30, 50, 1., 10, 10, 30, 450, 0, [], 0, 2.],
    ["Light 25m", "Sensors", 0, 200, 0.1, 0, 0, 0, False, 0, [], 0, 0.2],
    ["Light 100m", "Sensors", 0, 100, 0.5, 0, 0, 0, False, 0, [], 0, 1],
    ["Light 400m", "Sensors", 0, 500, 2, 0, 0, 0, False, 0, [], 0, 4.],
    ["Light 2000m", "Sensors", 0, 5000, 20, 0, 0, 0, False, 0, [], 0, 40.],
    ["Flashlight", "Survival", 0, 50, 0.3, 40, 40, 0, False, 0, [], 0, 0],
    ["Flashlight Infrared", "Survival", 20, 200, 0.3, 40, 40, 0, False, 0, [], 0, 0],
    ["Flashlight Low Light", "Survival", 20, 150, 0.3, 40, 40, 0, False, 0, [], 0, 0],
    ["Respirator", "Survival", 30, 50, 0.2, 40, 40, 0, 500, 0, [], 0, 0],
    ["Rebreather", "Survival", 20, 200, 2, 10, 10, 0, False, 0, [], 0, 0],
    ["Climbing Gear", "Survival", 0, 500, 3, 0, 0, 0, False, 0, [], 0, 0],
    ["Diving Gear", "Survival", 10, 1000, 10, -10, -10, 0, False, 0, [], 0, 0],
    ["Urban Survival Kit", "Survival", 0, 500, 2, 10, 10, 10, False, 0, [], 0, 0],
    ["Outdoors Survival Kit", "Survival", 0, 500, 2, 10, 10, 10, False, 0, [], 0, 0],
    ["Micro Winch (10kg)", "Survival", 0, 100, 0.2, 30, 30, 0, False, 0, [], 0, 0],
    ["Standard Winch (100kg)", "Survival", 200, 1, 15, 15, 0, 0, False, 0, [], 0, 0],
    ["Large Winch (250kg)", "Survival", 0, 300, 2, 5, 5, 0, False, 0, [], 0, 0],
    ["XXL Winch (500kg)", "Survival", 0, 500, 5, -5, -5, 0, False, 0, [], 0, 0],
    ["Microwire (20m)", "Survival", 20, 100, 0.5, 40, 70, 0, False, 0, [], 0, 0],
    ["Stealth Wire (20m)", "Survival", 30, 500, 0.75, 30, 70, 40, False, 0, [], 0, 0],
    ["Myomeric Rope (20m)", "Survival", 50, 1000, 1, 20, 70, 0, False, 0, [], 0, 0],
    ["Medkit", "Biotech", 10, 50, 3, 10, 30, 0, 450, 0, [], 0, 0],
    ["Bio Monitor", "Biotech", 20, 500, 1, 30, 30, 0, False, 0, [], 0, 0],
    ["Chem Patch", "Biotech", 0, 50, 0.1, 50, 100, 0, False, 0.01,
     ['Antidote I', 'Antidote II', 'Antidote III', 'Stim', 'Elysium', 'Oblivion', 'Joy', 'Truth', 'Narcojet', 'Gamma-Skopolamine'], 0, 0],
    ["Search", "Programmes", 0, 0, 0, None, None, 0, 100, 0, [], 0, 0],
    ["Stealth", "Programmes", 30, 0, 0, None, None, 40, 500, 0, [], 0, 0],
    ["Scan", "Programmes", 0, 0, 0, None, None, 0, 200, 0, [], 0, 0],
    ["Analyze", "Programmes", 0, 0, 0, None, None, 0, 200, 0, [], 0, 0],
    ["Access", "Programmes", 0, 0, 0, None, None, 0, 50, 0, [], 0, 0],
    ["Exploit", "Programmes", 40, 0, 0, None, None, 80, 1000, 0, [], 0, 0],
    ["Crypt", "Programmes", 0, 0, 0, None, None, 20, 100, 0, [], 0, 0],
    ["Break", "Programmes", 40, 0, 0, None, None, 70, 200, 0, [], 0, 0],
    ["Edit", "Programmes", 0, 0, 0, None, None, 0, 100, 0, [], 0, 0],
    ["Control", "Programmes", 0, 0, 0, None, None, 0, 50, 0, [], 0, 0],
    ["Find", "Programmes", 0, 0, 0, None, None, 0, 100, 0, [], 0, 0],
    ["Corrupt", "Programmes", 30, 0, 0, None, None, 60, 500, 0, [], 0, 0],
    ["Medic", "Programmes", 10, 0, 0, None, None, 10, 150, 0, [], 0, 0],

    ["Small Backpack", "Carrying Gear", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Large Backpack", "Carrying Gear", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Tactical Backpack", "Carrying Gear", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Combat Harness", "Carrying Gear", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Smart Combat Harness", "Carrying Gear", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["AR GLoves", "Input Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Nano Trodes", "Input Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Contact Lenses", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.04,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Glasses", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.1,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Goggles", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.3,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Binoculars, small", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.4,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Binoculars, large", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.8,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Pistol Scope", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.2,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Rifle Scope", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.4,
     ["Video Enhancement I", "Video Enhancement II", "Video Enhancement III", "Flare Compensation", "Vision Magnification 4x", "Infrared Vision", "Low Light Vision", "Microscopic Vision"], 0, 0],
    ["Earbuds", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.04,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0, 0],
    ["Headphones", "Output Devices", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0.3,
     ["Enhanced Hearing I", "Enhanced Hearing II", "Enhanced Hearing III", "Select Sound Filter I", "Select Sound Filter II", "Select Sound Filter III", "Damper", "Wide Frequency Adaption"], 0, 0],
    ["Tag Eraser", "Electronics", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["White Noise Generator", "Electronics", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, 1, 0, [], 0, 0],
    ["Data Chip", "Electronics", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Holo Projector", "Electronics", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, 1, 0, [], 0, 0],
    ["Polygraph", "Electronics", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, 1, 0, [], 0, 0],
    ["Restraints Metal", "Survival", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Restraints Plasteel", "Survival", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Restraints Plastic", "Survival", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, False, 0, [], 0, 0],
    ["Fake SIN", "Category", 50, Cost, Weight, Wis_stealth, Scan_stealth, 70, 5000, 0, [], 0, 0],
    ["Fake SIN with Security License", "Category", 55, Cost, Weight, Wis_stealth, Scan_stealth, 80, 7500, 0, [], 0, 0],
    ["Fake SIN with Military License", "Category", 60, Cost, Weight, Wis_stealth, Scan_stealth, 90, 10000, 0, [], 0, 0],

    ["Antidode I", "Drugs & Toxins", 0, 100, 0.02, 50, 10, 0, False, 0, [], 0, 0.01],
    ["Antidode II", "Drugs & Toxins", 30, 1000, 0.02, 50, 10, 0, False, 0, [], 0, 0.01],
    ["Antidode III", "Drugs & Toxins", 60, 5000, 0.02, 50, 10, 0, False, 0, [], 0, 0.01],
    ["Stim", "Drugs & Toxins", 20, 200, 0.02, 50, 10, 20, False, 0, [], 0, 0.01],
    ["Elysium", "Drugs & Toxins", 40, 300, 0.02, 50, 70, 60, False, 0, [], 0, 0.01],
    ["Oblivion", "Drugs & Toxins", 30, 200, 0.02, 50, 10, 50, False, 0, [], 0, 0.01],
    ["Joy", "Drugs & Toxins", 40, 500, 0.02, 50, 60, 60, False, 0, [], 0, 0.01],
    ["Truth", "Drugs & Toxins", 50, 1000, 0.02, 50, 30, 40, False, 0, [], 0, 0.01],

    ["Neuro-Stun", "Drugs & Toxins", 30, 200, 0.02, 50, 40, 40, False, 0, [], 0, 0.01],
    ["Neuro-Stun X", "Drugs & Toxins", 35, 400, 0.02, 50, 30, 50, False, 0, [], 0, 0.01],
    ["Narcojet", "Drugs & Toxins", 20, 50, 0.02, 50, 20, 30, False, 0, [], 0, 0.01],
    ["Seven-7", "Drugs & Toxins", 60, 1000, 0.02, 50, 40, 70, False, 0, [], 0, 0.01],
    ["Gamma-Skopolamine", "Drugs & Toxins", 60, 2000, 0.02, 50, 0, 50, False, 0, [], 0, 0.01],
    ["Nausea-Gas", "Drugs & Toxins", 10, 50, 0.02, 50, 20, 10, False, 0, [], 0, 0.01],

    ["C-4 100g", "Explosives", 40, 10, 0.1, 30, 20, 60, False, 0, [], 0, 0],
    ["C-4 1kg", "Explosives", 50, 100, 1., 10, 10, 60, False, 0, [], 0, 0],
    ["C-4 10kg", "Explosives", 60, 1000, 10., -10, 0, 60, False, 0, [], 0, 0],
    ["Radio Detonator", "Explosives", 20, 50, 0.05, 40, 20, 50, False, 0, [], 0, 0],
    ["Security Radio Detonator", "Explosives", 40, 500, 0.05, 40, 20, 60, False, 0, [], 0, 0],
    ["Timer Detonator", "Explosives", 20, 20, 0.05, 40, 20, 50, False, 0, [], 0, 0],

    ["Latex Face Mask", "Deception", 40, 200, 0.2, 40, 60, 60, False, 0, [], 0, 0],
    ["Nanopaste Face Mask", "Deception", 50, 2000, 0.2, 40, 70, 70, False, 0, [], 0, 0],

    ["Image Link", "Upgrade", 0, 0, None, None, None, 0, False, 0, [], 0., 0.],
    ["Video Enhancement I", "Upgrade", 10, 2000, None, None, None, 0, False, 0, [], 0.08, 0.02],
    ["Video Enhancement II", "Upgrade", 30, 10000, None, None, None, 0, False, 0, [], 0.12, 0.03],
    ["Video Enhancement III", "Upgrade", 50, 25000, None, None, None, 0, False, 0, [], 0.16, 0.04],
    ["Flare Compensation", "Upgrade", 0, 750, None, None, None, 0, False, 0, [], 0.1, 0.02],
    ["Laser System", "Upgrade", 0, 5000, None, None, None, 0, False, 0, [], 0.0, 0.05],
    ["Laser System Range Finder", "Upgrade", 0, 500, None, None, None, 0, False, 0, [], 0.0, 0.005],
    ["Laser System Microphone", "Upgrade", 0, 2000, None, None, None, 0, False, 0, [], 0.0, 0.01],
    ["Vision Magnification 4x", "Upgrade", 0, 1000, None, None, None, 0, False, 0, [], 0.15, 0.05],
    ["Vision Magnification 8x", "Upgrade", 0, 2500, None, None, None, 0, False, 0, [], 0.15, 0.15],
    ["Vision Magnification 16x", "Upgrade", 0, 5000, None, None, None, 0, False, 0, [], 0.15, 0.5],
    ["Vision Magnification 32x", "Upgrade", 0, 10000, None, None, None, 0, False, 0, [], 0.15, 1.5],
    ["Infrared Vision", "Upgrade", 10, 4000, None, None, None, 20, False, 0, [], 0.1, 0.03],
    ["Low Light Vision", "Upgrade", 10, 2500, None, None, None, 20, False, 0, [], 0.15, 0.015],
    ["Microscopic Vision", "Upgrade", 10, 3000, None, None, None, 20, False, 0, [], 0.2, 0.06],
    ["Enhanced Hearing I", "Upgrade", 10, 1500, None, None, None, 20, False, 0, [], 0.1, 0.02],
    ["Enhanced Hearing II", "Upgrade", 30, 7500, None, None, None, 20, False, 0, [], 0.15, 0.03],
    ["Enhanced Hearing III", "Upgrade", 50, 37500, None, None, None, 20, False, 0, [], 0.2, 0.04],
    ["Select Sound Filter I", "Upgrade", 10, 1000, None, None, None, 20, False, 0, [], 0.05, 0.015],
    ["Select Sound Filter II", "Upgrade", 30, 5000, None, None, None, 20, False, 0, [], 0.075, 0.02],
    ["Select Sound Filter III", "Upgrade", 50, 2500, None, None, None, 20, False, 0, [], 0.1, 0.03],
    ["Damper", "Upgrade", 10, 750, None, None, None, 20, False, 0, [], 0.1, 0.02],
    ["Wide Frequency Adaption", "Upgrade", 10, 6000, None, None, None, 20, False, 0, [], 0.2, 0.06],
    ["Ultra Wideband Radar", "Upgrade", 10, 15000, None, None, None, 20, False, 0, [], 0.3, 1.],
    ["Silencer", "Upgrade", 10, 200, None, None, None, 20, False, 0, [], 1, 0],
    ["Gas Vent", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Shock Pad", "Upgrade", 10, 100, None, None, None, 20, False, 0, [], 1, 0],
    ["External Smartgun", "Upgrade", 10, 1500, None, None, None, 20, False, 0, [], 1, 0],
    ["Smartlink", "Upgrade", 10, 0, None, None, None, 20, False, 0, [], 1, 0],
    ["Laser Sight 50m", "Upgrade", 0, 100, None, None, None, 0, False, 0, [], 0.0, 0.07],
    ["Laser Sight 150m", "Upgrade", 0, 150, None, None, None, 0, False, 0, [], 0.0, 0.3],
    ["Laser Sight 500m", "Upgrade", 0, 200, None, None, None, 0, False, 0, [], 0.0, 1],
    ["Gun Weight", "Upgrade", 10, 100, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Grenadelauncher", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Flamethrower", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Shotgun", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Bayonet", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Flashlight", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Infrared Flashlight", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Ultrasound", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Underbarrel Gun Cam", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],

    ["Insulation I", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Insulation II", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Insulation III", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Fire Proofing I", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Fire Proofing II", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Fire Proofing III", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Chem Seal I", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Chem Seal II", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],
    ["Chem Seal III", "Upgrade", 10, 500, None, None, None, 20, False, 0, [], 1, 0],

    ["Sustaining Focus Creation", "Focus", 30, 8000, 0.3, 80, None, 20, 2000, 0, [], 0, 0],
    ["Sustaining Focus Destruction", "Focus", 30, 8000, 0.3, 80, None, 50, 2000, 0, [], 0, 0],
    ["Sustaining Focus Detection", "Focus", 30, 8000, 0.3, 80, None, 40, 2000, 0, [], 0, 0],
    ["Sustaining Focus Manipulation", "Focus", 30, 8000, 0.3, 80, None, 40, 2000, 0, [], 0, 0],
    ["Weapon Focus", "Focus", 40, 10000, None, None, None, 0, 1000000, 50, [], 0, 0],
    ["Spell Focus Creation", "Focus", 40, 5000, 0.3, 80, None, 20, 1000000, 0, [], 0, 0],
    ["Spell Focus Destruction", "Focus", 40, 5000, 0.3, 80, None, 50, 1000000, 0, [], 0, 0],
    ["Spell Focus Detection", "Focus", 40, 5000, 0.3, 80, None, 40, 1000000, 0, [], 0, 0],
    ["Spell Focus Manipulation", "Focus", 40, 5000, 0.3, 80, None, 40, 1000000, 0, [], 0, 0],
    ["Power Focus", "Focus", 50, 20000, None, None, None, 0, 200000, 40, [], 0, 0],
    ["Spirit Focus Creation", "Focus", 35, 8000, 0.3, 80, None, 20, 800000, 0, [], 0, 0],
    ["Spirit Focus Destruction", "Focus", 35, 8000, 0.3, 80, None, 50, 800000,0, [], 0, 0],
    ["Spirit Focus Detection", "Focus", 35, 8000, 0.3, 80, None, 40, 800000, 0, [], 0, 0],
    ["Spirit Focus Manipulation", "Focus", 35, 8000, 0.3, 80, None, 40, 800000, 0, [], 0, 0],
    ["Banishing Focus", "Focus", 20, 1000, 0.3, 80, None, 20, 500000, 0, [], 0, 0],
    ["Counterspelling Focus", "Focus", 20, 1000, 0.3, 80, None, 20, 500000, 0, [], 0, 0],

    ['Civilian Driver Class I', 'Agent', 0, 200, None, None, None, 0, None, 0, [], 0, 0],
    ['Civilian Driver Class II', 'Agent', 10, 1000, None, None, None, 0, None, 0, [], 0, 0],
    ['Civilian Driver Class III', 'Agent', 20, 5000, None, None, None, 0, None, 0, [], 0, 0],
    ['Security Driver Class I', 'Agent', 30, 1400, None, None, None, 0, None, 50, [], 0, 0],
    ['Security Driver Class II', 'Agent', 40, 7000, None, None, None, 0, None, 50, [], 0, 0],
    ['Military Driver Class I', 'Agent', 50, 16000, None, None, None, 0, None, 70, [], 0, 0],
    ['Civilian Drone Pilot Class I', 'Agent', 0, 240, None, None, None, 0, None, 0, [], 0, 0],
    ['Civilian Drone Pilot Class II', 'Agent', 10, 1200, None, None, None, 0, None, 0, [], 0, 0],
    ['Civilian Drone Pilot Class III', 'Agent', 20, 6000, None, None, None, 0, None, 0, [], 0, 0],
    ['Security Drone Pilot Class I', 'Agent', 30, 2000, None, None, None, 0, None, 50, [], 0, 0],
    ['Security Drone Pilot Class II', 'Agent', 40, 10000, None, None, None, 0, None, 50, [], 0, 0],
    ['Military Drone Pilot Class I', 'Agent', 50, 23000, None, None, None, 0, None, 70, [], 0, 0],


]

gameitems.extend([["Activesoft: {}".format(key), "Skillsoft", 30, 0, None, None, None, 40, 4000*value.expweight, 0, [], 0, 0] for key, value in skills_dict.items() if value.kind == 'active'])
gameitems.extend([["Passivesoft: {}".format(key), "Skillsoft".format, 30, 0, None, None, None, 40, 6000*value.expweight, 0, [], 0, 0] for key, value in skills_dict.items() if value.kind == 'passive'])
gameitems.extend([
    ["Knowsoft", "Skillsoft", 10, 0, None, None, None, 0, 3000, 0, [], 0, 0],
    ["Linguasoft", "Skillsoft", 10, 0, None, None, None, 0, 2000, 0, [], 0, 0],
#small-armspistol: 30/-
#small-arms light: 45/30
#small-arms medium: 55/40
#small-arms heavy: 70/60
#light: 80
#medium: 120
#heavy: 180
#apc
#tank
    ["Small-Arms Pistol Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Light Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Medium Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Heavy Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Light Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Medium Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Heavy Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Assault Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Tank Fixed Weapon Mount", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],

    ["Small-Arms Pistol Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Light Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Medium Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Heavy Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Light Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Medium Turrret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Heavy Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Assault Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Tank Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],

    ["Small-Arms Pistol Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Light Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Medium Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Small-Arms Heavy Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Light Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Medium Retracteable Turrret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Heavy Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Assault Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
    ["Tank Retracteable Turret", "Vehicle Upgrade", Availability, Cost, Weight, Wis_stealth, Scan_stealth, legality, rating,capacity, upgradeables, relative_capacity, aboslute_capacity],
])
gameitems_nt = namedtuple('gameitem', ['id'] + gameitems[0])
gameitems_dict = OrderedDict([(entry[0], gameitems_nt(*([i] + entry))) for i, entry in enumerate(gameitems[1:])])

foci = [["item", "effects"],
    ["Sustaining Focus Creation", []],
    ["Sustaining Focus Destruction", []],
    ["Sustaining Focus Detection", []],
    ["Sustaining Focus Manipulation", []],
    ["Weapon Focus", []],
    ["Spell Focus Creation", []],
    ["Spell Focus Destruction", []],
    ["Spell Focus Detection", []],
    ["Spell Focus Manipulation", []],
    ["Power Focus", [['attributes','Magic','+{Rating}']]],
    ["Spirit Focus Creation", []],
    ["Spirit Focus Destruction", []],
    ["Spirit Focus Detection", []],
    ["Spirit Focus Manipulation", []],
    ["Banishing Focus", [['skills','Banishing','+{Rating}']]],
    ["Counterspelling Focus", [['skills','Counterspelling','+{Rating}']]],
]

foci_nt = namedtuple('focus', ['id'] + foci[0])
foci_dict = OrderedDict([(entry[0], foci_nt(*([i] + entry))) for i, entry in enumerate(foci[1:])])

rangedweapon_upgrades = {
    'top': ['External Smartgun', 'Pistol Scope', 'Rifle Scope'],
    'barrel': ['Silencer', 'Gas Vent'],
    'under': ['Underbarrel Grenadelauncher', 'Underbarrel Flamethrower', 'Underbarrel Heavy Pistol', 'Underbarrel Bayonet', 'Underbarrel Flashlight', 'Underbarrel Infrared Flashlight',
             'Underbarrel Ultrasound', 'Underbarrel Gun Cam', 'Gun Weight']}

rangedweapon_upgrades_reverse = {i:key for key, value in rangedweapon_upgrades.items() for i in value}
# effective strength = strength *1.5 if two handed
# kind          damage              penetration
# slashing      minstr/3 + str/6      minstr/3 + str/6
# impact        minstr/2.5 + str/5    minstr/4 + str/8
# penetration   minstr/3.5 + str/7    minstr/2 + str/4

closecombatweapons = [
    ["item", "skill", "skillmod", "damage", "damagetype", "damagekind", "penetration", "minstr", "hands",  "special"],
    ["Brawling", "Brawling", 0., '{Strength}/10.', "impact", "stun", '{Strength}/20.', 0., 2, None],
    ["Wrestling", "Wrestling", 0., '{Strength}/20.', "impact", "stun", '{Strength}/40.', 0., 2, None],
    ["Scimitar", "Slashing Weapons", 5., '10.+{Strength}/6.', "impact", "physical", '3.33+{Strength}/18.', 30., 1, None],
    ["Axe", "Impact Weapons", 3., '15.28+{Strength}/6.55', "impact", "physical", '12.22+{Strength}/8.18', 50., 1, None],
    ["Rapier", "Piercing Weapons", 7., '5.+{Strength}/10.', "impact", "physical", '7.5.+{Strength}/6.67.', 25., 1, None],
    ["Extendeable Baton", "Impact Weapons", 5., '6.94+{Strength}/7.20', "impact", "physical", '5.56+{Strength}/9.', 30., 1, None],
    ["Stun Baton", "Impact Weapons", 4., 30., "electricity", "stun", 10., 15., 1, [('upscale_limit', 15)]],
    ["Shock Gloves", "Wrestling", 0., 20., "electricity", "stun", 7, 0., 2, [('upscale_limit', 15)]],
    ["Combat Knife", "Piercing Weapons", 0., '3.33+{Strength}/9.', "impact", "physical", '5.+{Strength}/6.', 15., 1, None],
    ["Katana", "Slashing Weapons", 7., '13.5+{Strength}/4.44', "impact", "physical", '4.5.+{Strength}/13.33', 30., 2, None],
    ["Sword", "Slashing Weapons", 5., '12.21+{Strength}/6.55', "impact", "physical", '6.67+{Strength}/12.', 40., 1, None],
    ["Hammer", "Impact Weapons", 0., '15.+{Strength}/6.67', "impact", "physical", '16.67+{Strength}/6.', 50., 1, None],
    ["Spear", "Piercing Weapons", 10., '8.+{Strength}/7.5', "impact", "physical", '12.+{Strength}/5.', 30., 2, None],
    ["Snap Blades", "Piercing Weapons", 0., '4.44+{Strength}/9.', "impact", "physical", '6.67+{Strength}/6.', 20., 1, None],
    ["Mono Whip", "Slashing Weapons", 10., 20, "impact", "physical", 20, 20., 1, None],
    ["Mono Chainsaw", "Slashing Weapons", 0., '18.+{Strength}/5.', "impact", "physical", '6.+{Strength}/15.', 45., 1, None],
]

closecombatweapons_nt = namedtuple('rangedweapon', ['id'] + closecombatweapons[0])
closecombatweapons_dict = OrderedDict(
    [(entry[0], closecombatweapons_nt(*([i] + entry))) for i, entry in enumerate(closecombatweapons[1:])])


#flechette: damage + 20%, penetration so dass bei verdreifachung gleicher schaden
rangedweapons = [
    ["item", "skill", "skillmod", "damage", "damagetype", "damagekind", "penetration", "range", "shot", "burst", "auto",
     "minstr", "recoil", "mag", "magtype", "top", "under", "barrel", "special", "hands"],
    ["Defiance EX Shocker",   "Pistols", 0., 20., "electricity", "stun", 7., 5., 1, 0, 0, 20, 2, 4, "", 1, 0, 0, {'upscale_limit': 15}, 1],
    ["Yamaha Pulsar",         "Pistols", 0., 15., "electricity", "stun", 5., 10., 2, 0, 0, 20, 4, 4, "", 1, 0, 0, {'upscale_limit': 15}, 1],
    ["Streetline Special",    "Pistols", 0., 8., "ballistic", "physical", 10., 5., 1, 0, 0, 25, 15, 6, "", 0, 0, 0, None, 1],
    ["Raecor Sting",          "Pistols", 0., 10., "ballistic", "physical", 4., 5., 1, 0, 0, 25, 15, 5, "", 0, 0, 0, None, 1],
    ["Colt America L36",      "Pistols", 0., 8., "ballistic", "physical", 10., 10., 2, 0, 0, 30, 15, 11, "", 1, 0, 1, {'upgrades': ['Laser Sight 50m']}, 1],
    ["Fichetti Security 600", "Pistols", 0., 8., "ballistic", "physical", 10., 10., 2, 0, 0, 30, 15, 20, "", 1, 0, 1, {'upgrades': ['Laser Sight 50m']}, 1],
    ["Hammerli 620S",         "Pistols", 0., 8., "ballistic", "physical", 10., 12., 2, 0, 0, 30, 15, 6, "", 1, 0, 1, {'upgrades': ['Smartlink', 'Gas Vent']}, 1],
    ["Yamaha Sakura Fubuki",  "Pistols", 0., 8., "ballistic", "physical", 10., 9., 4, 0, 0, 30, 8, 40, "", 1, 0, 1, {'upgrades': ['Smartlink']}, 1],
    ["Ceska Black Scorpion",  "Automatics", 0., 8., "ballistic", "physical", 10., 10, 2, 3, 0, 40, 15, 36, "", 1, 0, 1, None, 1],
    ["Steyr TMP",             "Automatics", 0., 8., "ballistic", "physical", 10., 10, 2, 3, 8, 40, 15, 32, "", 1, 0, 1, None, 1],
    ["Ares Predator",         "Pistols", 0., 16., "ballistic", "physical", 15., 12., 2, 0, 0, 50, 15, 15, "", 1, 0, 1, {'upgrades': ['Smartlink']}, 1],
    ["Ares Viper Slivergun",  "Pistols", 0., 20., "ballistic", "physical", 6., 11., 2, 3, 0, 45, 15, 20, "", 1, 0, 1, {'upgrades': ['Silencer']}, 1],
    ["Colt Manhunter",        "Pistols", 0., 16., "ballistic", "physical", 15., 12., 2, 0, 0, 50, 15, 16, "", 1, 0, 1, {'upgrades': ['Laser Sight 50m']}, 1],
    ["Remington Roomsweeper", "Pistols", 0., 16., "ballistic", "physical", 15., 12., 2, 0, 0, 50, 20, 8, "", 1, 0, 1, None, 1],
    ["Ruger Super Warhawk",   "Pistols", 0., 18., "ballistic", "physical", 20., 13., 1, 0, 0, 60, 20, 6, "", 1, 0, 1, None, 1],
    ["AK-97 Carbine",         "Automatics", 0., 8., "ballistic", "physical", 10., 20, 2, 3, 7, 25, 15, 30, "", 1, 0, 1, None, 2],
    ["HK-227X",               "Automatics", 0., 8., "ballistic", "physical", 10., 20, 2, 3, 8, 25, 15, 28, "", 1, 0, 1, {'upgrades': ['Silencer', 'Smartlink', "Gas Vent"]}, 2],
    ["HK MP-5 TX",            "Automatics", 0., 8., "ballistic", "physical", 10., 20, 2, 3, 7, 25, 15, 20, "", 1, 0, 1, {'upgrades': ['Laser Sight 50m', "Gas Vent"]}, 2],
    ["Ingram Smartgun X",     "Automatics", 0., 8., "ballistic", "physical", 10., 20, 0, 3, 8, 25, 15, 32, "", 1, 0, 1, {'upgrades': ['Silencer', 'Smartlink']}, 2],
    ["Uzi IV",                "Automatics", 0., 8., "ballistic", "physical", 10., 20, 0, 3, 0, 25, 15, 24, "", 1, 0, 1, {'upgrades': ['Laser Sight 50m']}, 2],
    ["Mossberg AM-CMDT",      "Long Rifles", 0., 22., "ballistic", "physical", 8., 30, 2, 2, 5, 40, 20, 6, "", 1, 1, 1, None, 2],
    ["Remington 990",         "Automatics", 0., 18., "ballistic", "physical", 20., 30, 2, 0, 0, 40, 20, 6, "", 1, 1, 1, None, 2],
    ["Battle Rifle",          "Automatics", 0., 18., "ballistic", "physical", 30., 100, 4, 10, 20, 54, 15, 20, "", 1, 1, 1, None, 2],
    ["AK-97",                 "Automatics", 0., 12., "ballistic", "physical", 20., 80, 2, 3, 8, 36, 15, 38, "", 1, 1, 1, None, 2], #g36
    ["Ares Alpha",            "Automatics", 0., 12., "ballistic", "physical", 20., 80, 2, 3, 8, 36, 12, 42, "", 1, 1, 1, {'upgrades': ['Underbarrel Grenadelauncher', 'Smartlink']}, 2],
    ["FN HAR",                "Automatics", 0., 12., "ballistic", "physical", 20., 80, 2, 3, 8, 36, 15, 35, "", 1, 1, 1, {'upgrades': ['Laser Sight 150m', 'Gas Vent']}, 2],
    ["Ruger 100",             "Long Rifles", 0., 12., "ballistic", "physical", 20., 120, 2, 0, 0, 45, 25, 5, "", 0, 1, 1, {'upgrades': ['Shock Pad']}, 2],
    ["PJSS Elephant Rifle",   "Long Rifles", 0., 18., "ballistic", "physical", 30., 100, 1, 2, 0, 50, 25, 2, "", 1, 1, 1, {'upgrades': ['Shock Pad']}, 2],
    ["Ranger Arms SM-4",      "Long Rifles", 0., 16., "ballistic", "physical", 24., 160, 2, 0, 0, 60, 25, 15, "", 0, 1, 0, {'upgrades': ['Silencer', 'Shock Pad'], 'assembly': (3,3)}, 2],
    ["Walter MA-2100",        "Long Rifles", 0., 18., "ballistic", "physical", 30., 160, 2, 0, 0, 60, 25, 10, "", 1, 1, 1, {'upgrades': ['Smartlink', 'Shock Pad']}, 2],
    ["Ingram White Knight",   "Automatics", 0., 12., "ballistic", "physical", 20., 120, 2, 4, 12, 55, 15, 100, "", 0, 0, 0, {'upgrades': ['Smartlink', 'Gas Vent', 'Shock Pad']}, 2],
    ["GE Vindicator Minigun", "Automatics", 0., 12., "ballistic", "physical", 20., 120, 0, 0, 16, 85, 10, 100, "", 0, 0, 0, {'upgrades': ['Smartlink', 'Gas Vent', 'Shock Pad'], 'power-up': 1}, 2],
    ["Stoner-Ares M202",      "Automatics", 0., 18., "ballistic", "physical", 30., 150, 0, 0, 12, 80, 15, 100, "", 1, 1, 1, {'upgrades': ['Smartlink']}, 2],
    ["Ultimax HMG-2",         "Automatics", 0., 36., "ballistic", "physical", 60., 300, 0, 0, 12, 140, 15, 100, "", 1, 1, 1, {'upgrades': ['Smartlink', 'Tripod', 'Gas Vent']}, 2], #browning m2
    ["Panther XXL",           "Long Rifles", 0., 36., "ballistic", "physical", 60., 300, 1, 0, 0, 100, 25, 15, "", 1, 1, 1, {'upgrades': ['Smartlink']}, 2], #light fifty
    ["Ares Thunderstruck Gauss Rifle", "Long Rifles", 0., 30., "ballistic", "physical", 72., 320, 2, 0, 0, 100, 20, 10, "", 1, 1, 1, {'upgrades': ['Smartlink', 'Shock Pad']}, 2], #light fifty
    ["Throwing Knife","Aerodynamics", 0., '3+{Strength}/15.', "impact", "physical", '3+{Strength}/15.', 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0, None, 1],
    ["Shuriken","Aerodynamics", 0., '2+{Strength}/20.', "impact", "physical", '2+{Strength}/20.', 8, 1, 0, 0, 30, 0, 0, "", 1, 0, 0, None, 1],
    ["High Explosive Grenade", "Balls", 0., 200, "impact", "physical", 30, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Fall-Off Length': 1, 'Scatter Length': 2}, 1],
    ["Fragmentation Grenade", "Balls", 0., 100, "impact", "physical", 5, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Fall-Off Length': 4, 'Scatter Length': 2}, 1],
    ["Flash-Bang", "Balls", 0., 50,"impact", "stun", 5, 5, 5, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Fall-Off Length': 1, 'Scatter Length': 2, 'Maximum Lnegth': 8}, 1],
    ["Smoke Grenade", "Balls", 0., 0, "impact", "physical", 0, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Maximum Length': 8}, 1],
    ["Thermal Smoke Grenade", "Balls", 0., 0, "impact", "physical", 0, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Maximum Length': 8}, 1],
    ["Multispectrum Smoke Grenade", "Balls", 0., 0, "impact", "physical", 0, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Maximum Length': 4}, 1],
    ["Gas Grenade", "Balls", 0., 0, "impact", "physical", 0, 5, 1, 0, 0, 30, 0, 0, "", 1, 0, 0,
     {'Maximum Length': 4}, 1],
    ["Bow", "Archery", 0., '5+{Strength}/10.', "impact", "physical", '5+{Strength}/10.', 30, 1, 0, 0, 30, 0, 0, "", 1, 0, 0, None, 2],
    ["Orc Bow", "Archery", 0., '10+{Strength}/10.', "impact", "physical", '10+{Strength}/10.', 50, 1, 0, 0, 60, 0, 0, "", 1, 0, 0, None, 2],
    ["Troll Bow", "Archery", 0., '15+{Strength}/10.', "impact", "physical", '15+{Strength}/10.', 60, 1, 0, 0, 90, 0, 0, "", 1, 0, 0, None, 2],
    ["Pistol Crossbow", "Archery", 0., 6., "impact", "physical", 6., 10, 1, 0, 0, 26, 0, 0, "", 1, 1, 0, None, 1],
    ["Light Crossbow", "Archery", 0., 10., "impact", "physical", 10., 30, 1, 0, 0, 30, 0, 0, "", 1, 1, 0, None, 2],
    ["Heavy Crossbow", "Archery", 0., 16., "impact", "physical", 16., 48, 1, 0, 0, 40, 0, 0, "", 1, 1, 0, None, 2],
    ["Ares Antioch", "Indirect Fire", 0., 0., "impact", "physical", 0., 40, 1, 0, 0, 40, 0, 1, "", 1, 1, 0, {'upgrades': ['Smartlink']}, 2],
    ["Enfield GL-67", "Indirect Fire", 0., 0., "impact", "physical", 0., 30, 1, 0, 0, 60, 0, 8, "", 1, 1, 0, {'upgrades': ['Smartlink']}, 2],
]

rangedweapons_nt = namedtuple('rangedweapon', ['id'] + rangedweapons[0])
rangedweapons_dict = OrderedDict(
    [(entry[0], rangedweapons_nt(*([i] + entry))) for i, entry in enumerate(rangedweapons[1:])])

armor = [
    ["item", "locations", "protections", "maxagi", "coordmult"],
    ["Armored Clothing",
     ["Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[20.,0.], [20.,0.], [20.,0.], [20.,0.], [20.,0.], [20.,0.]],
     45, 0.95],
    ["Armored Pants",
     ["Right Leg", "Left Leg"],
     [[20.,0.], [20.,0.]],
     45, 0.95],
    ["Explorer Jumpsuit",
     ["Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[10.,30.], [10.,30.], [10.,30.], [10.,0.], [30.,0.], [10.,30.]],
     70, 0.90],
    ["Flak Vest",
     ["Upper Torso", "Lower Torso"],
     [[50.,20.],[50.,20.]],
     30, 0.9],
    ["Flak Vest with Plates",
     ["Upper Torso", "Lower Torso"],
     [[70.,40.],[70.,40.]],
     20, 0.75],
    ["Form Fitting Body Armor",
     ["Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[25.,0.], [25.,0.], [25.,0.], [25.,0.], [25.,0.], [25.,0.]],
     50, 0.95],
    ["Lined Coat",
     ["Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[30.,0.], [30.,0.], [30.,0.], [30.,0.], [20.,0.], [20.,0.]],
    50, 0.9],
    ["Armor Jacket",
     ["Upper Torso", "Lower Torso", "Right Arm", "Left Arm"],
     [[40., 15.],[30., 10.],[40., 15.],[40., 15.]],
     35, 0.85],
    ["Armor Pants",
     ["Right Leg", "Left Leg"],
     [[30., 10.],[30., 10.]],
     35, 0.85],
    ["Ballistic Mask",
     ["Head", ], [[20., 0.],], 60, 0.9],
    ["Biker Helmet",
     ["Head", ], [[10., 30.],], 40, 0.85],
    ["Light Helmet",
     ["Head", ], [[30., 15.],], 35, 0.8],
    ["Heavy Helmet",
     ["Head", ], [[40., 20.],], 25, 0.75],
    ["Light Carapace",
     ["Head", "Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[30., 15.], [50., 30.], [50., 30.], [40., 20.], [40., 20.], [40.,20.], [40.,20.]],
     35, 0.8],
    ["Heavy Carapace",
     ["Head", "Upper Torso", "Lower Torso", "Right Arm", "Left Arm", "Right Leg", "Left Leg"],
     [[40., 20.], [70., 40.], [70., 40.], [50., 25.], [50., 25.], [50.,25.], [50.,25.]],
     25, 0.75],
]

armor_nt = namedtuple('armor', ['id'] + armor[0])
armor_dict = OrderedDict(
    [(entry[0], armor_nt(*([i] + entry))) for i, entry in enumerate(armor[1:])])

essence_by_ware = {'cyberware': 0.,
                   'bioware': 0.}

ware = [
    ["name", "kind", "essence", "capacity", "part_weight", "additional_weight", "description", "basecost", "effectcost", "partcost", "parts",
     "effects", "location"],
    ["Smartgun Processor", "cyberware", 3, None, 0, 0, "Requires Additional Image Link, and connection", 0, 0, 5000, [], [], 'Brain'],
    ["Cybereyes", "cyberware", 0, 0.33, 0, 0, "Cybernetic Eye Replacement, Includes Image Link", 0, 2000, 6000, ["Eyes"], [], ''],
    ["High Capcity Cybereyes", "cyberware", 2, 1, 0, 0, "High Capacity Cybernetic Eye Replacement, includes Image Link", 0, 10000, 6000, ["Eyes"], [], ''],
    ["Cyberears", "cyberware", 0, 0.33, 0, 0, "Cybernetic Ear Replacement, includes Audio Link", 0, 2000, 6000, ["Ears"], [], ''],
    ["High Capacity Cyberears", "cyberware", 2, 1, 0, 0, "High Capacity Cybernetic Ear Replacement, includes Audio Link", 0, 10000, 6000, ["Ears"], [], ''],
    ["Brain Gateway Storage", "cyberware", 3, None, 0, 0, "Internal storage that can only be accessed with a mental command of the owner", 0, 5000, 0, [], [], 'Brain'],
    ["Datajack", "cyberware", 1, None, 0, 0, "A wired and wireless connection to headware. Wired: Unlimited Uplink. Wireless: Signal 10, Uplink 40.", 0, 250, 0, [], [], 'Brain'],
    ["Internal Datajack", "cyberware", 2, None, 0, 0, "A hidden wireless connection to headware. Signal 2, Uplink 50.", 0, 2000, 0, [], [], 'Brain'],
    ["Image Link", "cyberware", 2, None, 0, 0, "Machine to Video Sense Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Sound Link", "cyberware", 2, None, 0, 0, "Machine to Audio Sense Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Tactile Link", "cyberware", 2, None, 0, 0, "Machine to Tactile Sense Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Olfactorial Link", "cyberware", 2, None, 0, 0, "Machine to Olfactorial Sense Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Taste Link", "cyberware", 2, None, 0, 0, "Machine to Taste Sense Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Internal Simsense Module", "cyberware", 6, None, 0, 0, "Machine to Multisense Interface", 0, 5000, 0, [], [], 'Brain'],
    ["Knowledge-Link", "cyberware", 12, None, 0, 0, "Machine to Raw Thoughts/Knowledge Interface, allowes 1 concurrent Knowsofts of unlimited Rating", 0, 30000, 0, [],
     [['attributes', 'Logic', '+5'], ['skills', 'Data Search', '+10']], 'Brain'],
    ["Skillsoft Driver 25", "cyberware", 10, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Passivesofts with Rating 25", 3000, 3000, 0,
     [], [], 'Brain'],
    ["Skillsoft Driver 35", "cyberware", 15, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Passivesofts with Rating 35", 3000, 15000, 0,
     [], [], 'Brain'],
    ["Skillsoft Driver 45", "cyberware", 20, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Passivesofts with Rating 45", 3000, 75000, 0,
     [], [], 'Brain'],
    ["Skillsoft Expert System", "cyberware", 10, None, 0, 0, "Skill Expert System, adds +5 Rating to all Active/Passive/Knowsoft Ratings, allow use of Edge with these rolls", 5000, 50000, 0,
     [], [], 'Brain'],
    ["Skillsoft Compression System", "cyberware", 3, None, 0, 0, "Skill Compression System, allows 2 more concurrent of each Active/Passive/Knowsoft", 5000, 5000, 0,
     [], [], 'Brain'],
    ["Transducer", "cyberware", 2, None, 0, 0, "Vocal Thoughts to Machine Interface", 0, 1000, 0, [], [], 'Brain'],
    ["Simrig", "cyberware", 4, None, 0, 0, "Senses/Motoric Triggers to Machine Interface", 0, 5000, 0, [], [], 'Brain'],
    ["Transscriber", "cyberware", 6, None, 0, 0, "Raw Thoughts to Machine Interface", 0, 20000, 0, [], [], 'Brain'],
    ["Encephalon I", "cyberware", 6, None, 0, 0, "Cybernetic Logic-Processing Unit", 0, 6000, 0, [],
     [["attributes", "Logic", "+10"]], 'Brain'],
    ["Encephalon II", "cyberware", 11, None, 0, 0, "Cybernetic Logic-Processing Unit", 0, 30000, 0, [],
     [["attributes", "Logic", "+20"]], 'Brain'],
    ["Encephalon III", "cyberware", 15, None, 0, 0, "Cybernetic Logic-Processing Unit", 0, 150000, 0, [],
     [["attributes", "Logic", "+30"]], 'Brain'],
    ["Sensor Coprocessor I", "cyberware", 6, None, 0, 0, "Cybernetic Sensor Coprocessor", 0, 6000, 0, [],
     [["attributes", "Intuition", "+10"]], 'Brain'],
    ["Sensor Coprocessor II", "cyberware", 11, None, 0, 0, "Cybernetic Sensor Coprocessor", 0, 30000, 0, [],
     [["attributes", "Intuition", "+20"]], 'Brain'],
    ["Sensor Coprocessor III", "cyberware", 15, None, 0, 0, "Cybernetic Sensor Coprocessor", 0, 150000, 0, [],
     [["attributes", "Intuition", "+30"]], 'Brain'],
    ["Emotion Control Filter I", "cyberware", 6, None, 0, 0, "Cybernetic Processing Filter", 0, 6000, 0, [],
     [["attributes", "Willpower", "+10"]], 'Brain'],
    ["Emotion Control Filter II", "cyberware", 11, None, 0, 0, "Cybernetic Processing Filter", 0, 30000, 0, [],
     [["attributes", "Willpower", "+20"]], 'Brain'],
    ["Emotion Control Filter III", "cyberware", 15, None, 0, 0, "Cybernetic Processing Filter", 0, 150000, 0, [],
     [["attributes", "Willpower", "+30"]], 'Brain'],
    ["Cerebral Booster I", "bioware", 6, None, 0, 0, "Bionetic Cortex Enhancement", 6000, 6000, 0, [],
     [["attributes", "Logic", "+10"]], 'Brain'],
    ["Cerebral Booster II", "bioware",11, None, 0, 0, "Bionetic Cortex Enhancement", 6000, 48000, 0, [],
     [["attributes", "Logic", "+20"]], 'Brain'],
    ["Cerebral Booster III", "bioware", 15, None, 0, 0, "Bionetic Cortex Enhancement", 6000, 294000, 0, [],
     [["attributes", "Logic", "+30"]], 'Brain'],
    ["Thalamus Enhancer I", "bioware", 6, None, 0, 0, "Bionetic Thalamus Enhancement", 6000, 6000, 0, [],
     [["attributes", "Intuition", "+10"]], 'Brain'],
    ["Thalamus Enhancer II", "bioware", 11, None, 0, 0, "Bionetic Thalamus Enhancement", 6000, 42000, 0, [],
     [["attributes", "Intuition", "+20"]], 'Brain'],
    ["Thalamus Enhancer III", "bioware", 15, None, 0, 0, "Bionetic Thalamus Enhancement", 6000, 294000, 0, [],
     [["attributes", "Intuition", "+30"]], 'Brain'],
    ["Lymbic Filter I", "bioware", 6, None, 0, 0, "Bionetic Lymbic Filter System", 6000, 6000, 0, [],
     [["attributes", "Willpower", "+10"]], 'Brain'],
    ["Lymbic Filter II", "bioware", 11, None, 0, 0, "Bionetic Lymbic Filter System", 6000, 42000, 0, [],
     [["attributes", "Willpower", "+20"]], 'Brain'],
    ["Lymbic Filter III", "bioware", 15, None, 0, 0, "Bionetic Lymbic Filter System", 6000, 294000, 0, [],
     [["attributes", "Willpower", "+30"]], 'Brain'],
    ["Pain Editor", "cyberware", 10, None, 0, 0, "Cybernetic Pain Gateway", 0, 20000, 0, [],
     [["stats", "Pain Resistance", "+1."], ["attributes", "Willpower", "+10"], ["attributes", "Intuition", "-10"]], 'Brain'],
    ["Emo-Pattern Sub-Processor", "cyberware", 10, None, 0, 0, "Cybernetic Emotion Detection Sub-Processor.", 0, 12000, 0, [],
     [["skills", "Judge Person", "+10."]], 'Brain'],
    ["Sleep Regulator", "bioware", 5, None, 0, 0, "Sleep Regulator", 2500, 5000, 0, [],
     [], 'Brain'],
    ["Trauma Damper", "bioware", 7, None, 0, 0, "Reduce effective stun damage by 30%", 4000, 26000, 0, [],
     [['stats', 'Stun Damage Reduction', '*0.70']], 'Brain'],
    ["Voice Modulator", "cyberware", 3, None, 0, 0, "Enables the user to change the tone of his voice", 0, 5000, 0, [],
     [['skills', 'Act', '+5'], ['skills', 'Discussion', '+5'], ['skills', 'Interaction', '+5'], ['skills', 'Singing', '+10']], 'Vocal Chords'],
    ["Tailored Pheromones", "bioware", 10, None, 0, 0, "Enables the user emmit tailored pheromones. +10 on Discussion and Interaction Skill Tests if appropriate (Manual) ", 10000, 20000, 0, [],
     [], 'Upper Torso'],
    ["Nano Repair Bots I", "cyberware", 4, None, 0, 0, "Divide healing time of all damage by 4, wounds by 2", 0, 6000, 0, [],
     [['stats', 'Damage Heal Time', '*0.25'], ['stats', 'Wound Heal Time', '*0.5']], 'Bloodstream'],
    ["Nano Repair Bots II", "cyberware", 6, None, 0, 0, "Divide healing time of all damage by 8, wounds by 4", 0, 30000, 0, [],
     [['stats', 'Damage Heal Time', '*0.125'], ['stats', 'Wound Heal Time', '*0.25']], 'Bloodstream'],
    ["Nano Repair Bots III", "cyberware", 8, None, 0, 0, "Divide healing time of all damage by 16, wounds by 8", 0, 150000, 0, [],
     [['stats', 'Damage Heal Time', '*0.0625'], ['stats', 'Wound Heal Time', '*0.125']], 'Bloodstream'],
    ["Symbiotes I", "bioware", 3, None, 0, 0, "Divide healing time of all damage (not wounds) by 2", 3000, 3000, 0, [],
     [['stats', 'Damage Heal Time', '*0.5']], 'Bloodstream'],
    ["Symbiotes II", "bioware", 4, None, 0, 0, "Divide healing time for all damage (not wounds) by 4", 3000, 22000, 0, [],
     [['stats', 'Damage Heal Time', '*0.25']], 'Bloodstream'],
    ["Symbiotes III", "bioware", 6, None, 0, 0, "Divide healing time of all damage (not wounds) by 8", 3000, 147000, 0, [],
     [['stats', 'Damage Heal Time', '*0.125']], 'Bloodstream'],
    ["Platelet Factory I", "bioware", 5, None, 0, 0, "Reduce bleeding by 1 wound", 3000, 4000, 0, [],
     [['stats', 'Bleeding Wounds' '-1']], 'Bloodstream'],
    ["Platelet Factory II", "bioware", 8, None, 0, 0, "Reduces bleeding by 2 wounds, reduce effective physical damage by 15%", 3000, 28250, 0, [],
     [['stats', 'Bleeding Wounds', '-2'], ['stats', 'Physical Damage Reduction', '*0.85']], 'Bloodstream'],
    ["Platelet Factory III", "bioware", 10, None, 0, 0, "Reduces bleeding by 3 wounds, reduce effective physical damage by 30%", 3000, 184500, 0, [],
     [['stats', 'Bleeding Wounds', '-3'], ['stats', 'Physical Damage Reduction', '*0.70']], 'Bloodstream'],
    ["Auto Injector", "cyberware", 3, None, 0, 0, "Can inject up to 6 doses of drugs/toxins on defined triggers. Halve the speed of the compound.", 0, 1000, 0, [],
     [], 'Neck'],
    ["Skinlink", "cyberware", 3, None, 0, 0, "Allowes low bandwidth connections over skin. Uplink 10.", 0, 3000, 0, [],
     [], 'Skin'],
    ["Biomonitor", "cyberware", 5, None, 0, 0, "Detailed bio information of the user. +10 on Medic, +5 on Judge Person Tests if user is target. (Manual)", 0, 3000, 0, [],
     [], 'Torso'],
    ["Tracheal Filter", "bioware", 3, None, 0, 0, "+10 on Resist Rolls against Inhalation Vector Drugs and Toxins. (Manual)", 2500, 5000, 0, [],
     [], 'Trachea'],
    ["Blood Filter", "bioware", 5, None, 0, 0, "+10 on Resist Rolls agains Drugs and Toxins. (Manual)", 5000, 10000, 0, [],
     [], 'Blood'],
    ["Nano Tox-Bots", "cyberware", 5, None, 0, 0, "+15 on Resist Rolls agains Drugs and Toxins. (Manual)", 0, 10000, 0, [],
     [], 'Blood'],
    ["Vehicle Control Rig I", "cyberware", 5, None, 0, 0, "Enables user to interface with rigged Vehicles. Requires Simrig and Internal Simsense Module", 5000, 3000, 6000, ["Vertebrae"],
     [], ''],
    ["Vehicle Control Rig II", "cyberware", 7, None, 0, 0, "Enables user to interface with rigged Vehicles. Requires Simrig and Internal Simsense Module", 5000, 30000, 6000, ["Vertebrae"],
     [], ''],
    ["Vehicle Control Rig III", "cyberware", 10, None, 0, 0, "Enables user to interface with rigged Vehicles. Requires Simrig and Internal Simsense Module", 5000, 150000, 6000, ["Vertebrae"],
     [], ''],
    ["Left Cyberarm", "cyberware", 0, 0.65, 0, 0, "Artificial cyberlimb", 0, 1000, 6000, ["Left Arm"], [], ''],
    ["Right Cyberarm", "cyberware", 0, 0.65, 0, 0, "Artificial cyberlimb", 0, 1000, 6000, ["Right Arm"], [], ''],
    ["Left Cyberleg", "cyberware", 0, 0.65, 0, 0, "Artificial cyberlimb", 0, 1000, 6000, ["Left Leg"], [], ''],
    ["Right Cyberleg", "cyberware", 0, 0.65, 0, 0, "Artificial cyberlimb", 0, 1000, 6000, ["Right Leg"], [], ''],
    ["High Capacity Left Cyberarm", "cyberware", 1, 1, 0, 0, "Artificial cyberlimb", 5000, 2000, 7000, ["Left Arm"], [], ''],
    ["High Capacity Right Cyberarm", "cyberware", 1, 1, 0, 0, "Artificial cyberlimb", 5000, 2000, 7000, ["Right Arm"], [], ''],
    ["High Capacity Left Cyberleg", "cyberware", 1, 1, 0, 0, "Artificial cyberlimb", 5000, 2000, 7000, ["Left Leg"], [], ''],
    ["High Capacity Right Cyberleg", "cyberware", 1, 1, 0, 0, "Artificial cyberlimb", 5000, 2000, 7000, ["Right Leg"], [], ''],
    ["Left Raptor Cyberleg", "cyberware", 2, 0.8, 0, 0, "Artificial cyberlimb", 5000, 2000, 6000, ["Left Leg"],
     [['stats', 'Running Speed', '*1.5'], ['stats', 'Sprinting Speed', '*1.5'], ['stats','Running Jump Vertical', '*1.5'], ['stats','Running Jump Horizontal', '*1.5']], ''],
    ["Right Raptor Cyberleg", "cyberware", 2, 0.8, 0, 0, "Artificial cyberlimb", 5000, 2000, 6000, ["Right Leg"],
     [['stats', 'Running Speed', '*1.5'], ['stats', 'Sprinting Speed', '*1.5'], ['stats','Running Jump Vertical', '*1.5'], ['stats','Running Jump Horizontal', '*1.5']], ''],
    ["Torso Shell", "cyberware", 0, 0.65, 0, 0, "Artificial Cybertorso", 0, 5000, 6000,
     ["Upper Torso Bones", "Upper Torso Muscles", "Upper Torso Nerves", "Upper Torso Skin",
      "Lower Torso Bones", "Lower Torso Muscles", "Lower Torso Nerves", "Lower Torso Skin",], [], ''],
    ["High Capacity Torso Shell", "cyberware", 2, 1, 0, 0, "Artificial Cybertorso", 5000, 8000, 7000,
     ["Upper Torso Bones", "Upper Torso Muscles", "Upper Torso Nerves", "Upper Torso Skin",
      "Lower Torso Bones", "Lower Torso Muscles", "Lower Torso Nerves", "Lower Torso Skin",], [], ''],
    ["Cyberskull", "cyberware", 0, 1, 0, 0, "Artificial Cyberskull, Reduces Essence Cost for Headware", 0, 5000, 6000, ["Head Bones", "Head Skin"], [['Essence Cost', 'Brain', '*0.9']], ''],
    ["Muscle Augmentation Upper", "bioware", 0, None, 0, 0, "Biological muscle replacement", 6000, 0, 6000,
     ["Left Arm Muscles", "Right Arm Muscles", "Upper Torso Muscles"], [], ''],
    ["Muscle Augmentation Lower", "bioware", 0, None, 0, 0, "Biological muscle replacement", 6000, 0, 6000,
     ["Left Leg Muscles", "Right Leg Muscles", "Lower Torso Muscles"], [], ''],
    ["Muscle Augmentation Total", "bioware", 0, None, 0, 0, "Biological muscle replacement", 6000, 0, 6000,
     ["Left Leg Muscles", "Right Leg Muscles", "Lower Torso Muscles",
      "Left Arm Muscles", "Right Arm Muscles", "Upper Torso Muscles"], [], ''],
    ["Muscle Replacement Upper", "cyberware", 0, None, 0, 0, "Cybernetic muscle replacement", 0, 0, 6000,
     ["Left Arm Muscles", "Right Arm Muscles", "Upper TorsoMuscles"], [], ''],
    ["Muscle Replacement Lower", "cyberware", 0, None, 0, 0, "Cybernetic muscle replacement", 0, 0, 6000,
     ["Left Leg Muscles", "Right Leg Muscles", "Lower Torso Muscles"], [], ''],
    ["Muscle Replacement Total", "cyberware", 0, None, 0, 0, "Cybernetic muscle replacement", 0, 0, 6000,
     ["Left Leg Muscles", "Right Leg Muscles", "Lower Torso Muscles",
      "Left Arm Muscles", "Right Arm Muscles", "Upper Torso Muscles"], [], ''],
    ["Bone Density Upper", "bioware", 0, None, 0, 0, "Biological bone strengthening", 6000, 0, 6000,
     ["Left Arm Bones", "Right Arm Bones", "Upper Torso Bones"], [], ''],
    ["Bone Density Lower", "bioware", 0, None, 0, 0, "Biological bone strengthening", 6000, 0, 6000,
     ["Left Leg Bones", "Right Leg Bones", "Lower Torso Bones"], [], ''],
    ["Bone Density Total", "bioware", 0, None, 0, 0, "Biological bone strengthening", 6000, 0, 6000,
     ["Left Leg Bones", "Right Leg Bones", "Lower Torso Bones",
      "Left Arm Bones", "Right Arm Bones", "Upper Torso Bones"], [], ''],
    ["Bone Lacing Upper", "cyberware", 0, None, 0, 0, "Cybernetic bone lacing", 0, 0, 6000,
     ["Left Arm Bones", "Right Arm Bones", "Upper Torso Bones"], [], ''],
    ["Bone Lacing Lower", "cyberware", 0, None, 0, 0, "Cybernetic bone lacing", 0, 0, 6000,
     ["Left Leg Bones", "Right Leg Bones", "Lower Torso Bones"], [], ''],
    ["Bone Lacing Total", "cyberware", 0, None, 0, 0, "Cybernetic bone lacing", 0, 0, 6000,
     ["Left Leg Bones", "Right Leg Bones", "Lower Torso Bones",
      "Left Arm Bones", "Right Arm Bones", "Upper Torso Bones"], [], ''],
    ["Wired Reflexes I", "cyberware", 8, None, 0, 0, "Cybernetic nerve replacement", 5000, 5000, 6000,
     ["Vertebrae"], [['stats', 'Physical Reaction', '+10'], ['stats', 'Physical Action Multiplyer', '*0.9']], ''],
    ["Wired Reflexes II", "cyberware", 15, None, 0, 0, "Cybernetic nerve replacement", 5000, 25000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves"],
     [['stats', 'Physical Reaction', '+20'], ['stats', 'Physical Action Multiplyer', '*0.8']], ''],
    ["Wired Reflexes III", "cyberware", 20, None, 0, 0, "Cybernetic nerve replacement", 5000, 125000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves", "Lower Torso Nerves", "Left Leg Nerves",
      "Right Leg Nerves"],
     [['stats', 'Physical Reaction', '+30'], ['stats', 'Physical Action Multiplyer', '*0.7']], ''],
    ["Skillwires 25", "cyberware", 8, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Activesofts with Rating 25", 4000, 4000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves", "Lower Torso Nerves", "Left Leg Nerves",
      "Right Leg Nerves"], [], ''],
    ["Skillwires 35", "cyberware", 10, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Activesofts with Rating 35", 4000, 20000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves", "Lower Torso Nerves", "Left Leg Nerves",
      "Right Leg Nerves"], [], ''],
    ["Skillwires 45", "cyberware", 12, None, 0, 0, "Skill Driver System, allowes a maximum of 2 concurrent Activesofts with Rating 45", 4000, 100000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves", "Lower Torso Nerves", "Left Leg Nerves",
      "Right Leg Nerves"], [], ''],
    ["Synaptic Accelerator I", "bioware", 8, None, 0, 0, "Bionetic nerve replacement", 15000, 5000, 6000,
     ["Vertebrae"], [ ['stats', 'Physical Reaction', '+10'], ['stats', 'Physical Action Multiplyer', '*0.9']], ''],
    ["Synaptic Accelerator II", "bioware", 15, None, 0, 0, "Bionetic nerve replacement",15000, 35000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves"],
     [['stats', 'Physical Reaction', '+20'], ['stats', 'Physical Action Multiplyer', '*0.8']], ''],
    ["Synaptic Accelerator III", "bioware", 20, None, 0, 0, "Bionetic nerve replacement", 15000, 245000, 6000,
     ["Vertebrae", "Upper Torso Nerves", "Left Arm Nerves", "Right Arm Nerves", "Lower Torso Nerves", "Left Leg Nerves",
      "Right Leg Nerves"],
     [['stats', 'Physical Reaction', '+30'], ['stats', 'Physical Action Multiplyer', '*0.7']], ''],
    ["Damage Compensator 33%", "cyberware", 2, None, 0, 0, "Cybernetic Pain Stimulus Filter", 0, 2500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+0.33"]], ''],
    ["Damage Compensator 66%", "cyberware", 3, None, 0, 0, "Cybernetic Pain Stimulus Filter", 0, 12500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+0.66"]], ''],
    ["Damage Compensator 100%", "cyberware", 4, None, 0, 0, "Cybernetic Pain Stimulus Filter", 0, 62500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+1."]], ''],
    ["Damage Regulator 33%", "bioware", 2, None, 0, 0, "Bilogical Pain Stimulus Filter", 2500, 2500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+0.33"]], ''],
    ["Damage Regulator 66%", "bioware", 3, None, 0, 0, "Cybernetic Pain Stimulus Filter", 2500, 17500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+0.66"]], ''],
    ["Damage Regulator 100%", "bioware", 4, None, 0, 0, "Cybernetic Pain Stimulus Filter", 2500, 122500, 6000, ["Vertebrae"],
     [["stats", "Pain Resistance", "+1."]], ''],
    ["Cyberheart", "cyberware", 1, None, 0, 0, "Cybernetic Heart", 0, 5000, 6000, ["Heart"],
     [["skills", "Athletics", "+10"]], ''],
    ["Synthacardium", "bioware", 1, None, 0, 0, "Bionic Heart", 6000, 2000, 6000, ["Heart"],
     [["skills", "Athletics", "+5"]], ''],
    ["Cybernetic Lungs", "cyberware", 2, 1, 0, 0, "Cybernetic Lungs. ", 0, 0, 6000, ["Lungs"],
     [], ''],
    ["Bionet Lungs", "bioware", 0, None, 0, 0, "Bionic Lungs.", 2000, 0, 6000, ["Lungs"],
     [], ''],
    ["Torso Dermal Plating", "cyberware", 8, None, 0, 0, "Subdermal Armor Plates", 0, 10000, 0, [],
     [["ballistic armor", "Upper Torso", "20"],["ballistic armor", "Lower Torso", "20"],
      ["impact armor", "Upper Torso", "20"],["impact armor", "Lower Torso", "20"],
     ],
     'Torso'],
    ["Upper Body Dermal Plating", "cyberware", 12, None, 0, 0, "Subdermal Armor Plates", 0, 15000, 0, [],
     [["ballistic armor", "Upper Torso", "30"],["ballistic armor", "Lower Torso", "30"],
      ["ballistic armor", "Right Arm", "30"],["ballistic armor", "Left Arm", "30"],
      ["impact armor", "Upper Torso", "30"],["impact armor", "Lower Torso", "30"],
      ["impact armor", "Right Arm", "30"],["impact armor", "Left Arm", "30"],
     ],
     'Torso and Arms'],
    ["Total Body Dermal Plating", "cyberware", 16, None, 0, 0, "Subdermal Armor Plates", 0, 20000, 0, [],
     [["ballistic armor", "Upper Torso", "30"],["ballistic armor", "Lower Torso", "30"],
      ["ballistic armor", "Right Arm", "30"],["ballistic armor", "Left Arm", "30"],
      ["ballistic armor", "Right Leg", "30"],["ballistic armor", "Left Leg", "30"],
      ["ballistic armor", "Head", "30"],
      ["impact armor", "Upper Torso", "30"],["impact armor", "Lower Torso", "30"],
      ["impact armor", "Right Arm", "30"],["impact armor", "Left Arm", "30"],
      ["impact armor", "Right Leg", "30"],["impact armor", "Left Leg", "30"],
      ["impact armor", "Head", "30"]
     ],
     'Body'],
    ["Dermal Sheath", "cyberware", 0, 0.2, 0, 0, "Cybernetic Dermal Armor", 0, 20000, 6000,
     ["Upper Torso Skin", "Left Arm Skin", "Right Arm Skin", "Lower Torso Skin", "Left Leg Skin",
      "Right Leg Skin", "Head Skin"],
     [["ballistic armor", "Upper Torso", "20"],["ballistic armor", "Lower Torso", "20"],
      ["ballistic armor", "Right Arm", "20"],["ballistic armor", "Left Arm", "20"],
      ["ballistic armor", "Right Leg", "20"],["ballistic armor", "Left Leg", "20"],
      ["ballistic armor", "Head", "20"],
     ],
     ''],
    ["Orthoskin", "bioware", 0, None, 0, 0, "Bionetic Dermal Armor", 20000, 20000, 6000,
     ["Upper Torso Skin", "Left Arm Skin", "Right Arm Skin", "Lower Torso Skin", "Left Leg Skin",
      "Right Leg Skin", "Head Skin"],
     [["ballistic armor", "Upper Torso", "20"],["ballistic armor", "Lower Torso", "20"],
      ["ballistic armor", "Right Arm", "20"],["ballistic armor", "Left Arm", "20"],
      ["ballistic armor", "Right Leg", "20"],["ballistic armor", "Left Leg", "20"],
      ["ballistic armor", "Head", "20"],
     ],
     ''],
     ["Cybernetic Balance Tail", "cyberware", 5, None, 0, 0, "Cybernetic tail", 0, 5000, 0,
     [], [['skills', 'Balance', '+20']], 'Spine'],
     ["Bionetic Balance Tail", "cyberware", 5, None, 0, 0, "Bionetic tail", 5000, 5000, 0,
     [], [['skills', 'Balance', '+20']], 'Spine'],
]

ware.extend([["Reflex Recorder I: {}".format(key), "cyberware", 3, None, 0, 0, "Skill increase", 0, 12000*value.expweight, 6000, ["Vertebrae"], [['skills', key, '+5']], ''] for key, value in skills_dict.items() if value.kind == 'active'])
ware.extend([["Reflex Recorder II: {}".format(key), "cyberware", 4, None, 0, 0, "Skill increase", 0, 36000*value.expweight, 6000, ["Vertebrae"], [['skills', key, '+10']], ''] for key, value in skills_dict.items() if value.kind == 'active'])
ware.extend([["Reflex Recorder III: {}".format(key), "cyberware", 5, None, 0, 0, "Skill increase", 0, 108000*value.expweight, 6000, ["Vertebrae"], [['skills', key, '+15']], ''] for key, value in skills_dict.items() if value.kind == 'active'])

ware_nt = namedtuple('ware', ['id'] + ware[0])
ware_dict = OrderedDict([(entry[0], ware_nt(*([i]+ entry))) for i, entry in enumerate(ware[1:])])

fixtures = [
    ["name", 'location', 'relative_capacity', 'absolute_capacity', 'weight', 'description', 'effects', 'cost'],
    ['Image Link', ['Eyes'], 0, 0, 0, "Machine to Video Sense Interface", [], 0 ],
    ['Video Enhancement I', ['Eyes'], 0.08, 0.02, 0, "Add +5 to Visual Perception skill", [['skills', 'Visual', '+5']], 2000],
    ['Video Enhancement II', ['Eyes'], 0.12, 0.03, 0, "Add +10 to Visual Perception skill", [['skills', 'Visual', '+10']], 10000],
    ['Video Enhancement III', ['Eyes'], 0.16, 0.04, 0, "Add +15 to Visual Perception skill", [['skills', 'Visual', '+15']], 50000],
    ['Flare Compensation', ['Eyes'], 0.05, 0.01, 0, "Reduce Glare Modifiers by 20 (Manual).", [], 750],
    ['Vision Magnification 4x', ['Eyes'], 0.15, 0.05, 0, "Enables user to zoom in and out", [], 1000],
    ['Vision Magnification 8x', ['Eyes'], 0.15, 0.15, 0, "Enables user to zoom in and out", [], 2500],
    ['Infrared Vision', ['Eyes'], 0.1, 0.03, 0, "Enables infrared vision", [], 4000],
    ['Low Light Vision', ['Eyes'], 0.15, 0.015, 0, "Enables low light vision", [], 2500 ],
    ['Microscopic Vision', ['Eyes'], 0.2, 0.05, 0, "Enables microscopic vision", [], 3000 ],
    ['Eye Laser System', ['Eyes'], 0, 0.03, 0., "Allows for installation of Eye-Laser subsystems", [], 5000],
    ['Eye Laser Microphone', ['Eyes'], 0, 0.01, 0, "Requires Eye Laser System, works like a Laser Microphone (Range 20 Meters)", [], 2000],
    ['Eye Laser Designator', ['Eyes'], 0, 0.01, 0., "Requires Eye Laser System, works like a Laser Designator (Range 30 Meters)", [], 1500],
    ['Eye Laser Range Finder', ['Eyes'], 0, 0.005, 0, "Requires Eye Laser System, works like a Range Finder (Range 50 Meters)", [], 500],
    ['Eye Laser Power Increase', ['Eyes'], 0, 0.07, 0, "Requires Eye Laser System, triples all ranges and allowes to work as a Tool Laser", [], 5000],
    ['Eye Light System', ['Eyes'], 0., 0.05, 0, "Provides Perfect Vison with Low Light Vision for up to 25 Meters", [], 3000],
    ['Ocular Drones', ['Eyes'], 0.3, 0.2, 0, "Transforms both eyes into ocular drones", [], 20000],
    ['Sound Link', ['Ears'], 0, 0, 0, "Machine to Audio Sense Interface", [], 0],
    ['Enhanced Hearing I', ['Ears'], 0.1, 0.02, 0, "Add +5 to Aural Perception skill", [['skills', 'Aural', '+5']], 1500],
    ['Enhanced Hearing II', ['Ears'], 0.15, 0.03, 0, "Add +10 to Aural Perception skill", [['skills', 'Aural', '+10']], 7500],
    ['Enhanced Hearing III', ['Ears'], 0.2, 0.04, 0, "Add +15 to Aural Perception skill", [['skills', 'Aural', '+15']], 37500],
    ['Select Sound Filter I', ['Ears'], 0.05, 0.015, 0, "Subtract 5 from Environmental Noise Modifiers (manual)", [], 1000],
    ['Select Sound Filter II', ['Ears'], 0.075, 0.02, 0, "Subtract 10 from Environmental Noise Modifiers (manual)", [], 5000],
    ['Select Sound Filter III', ['Ears'], 0.1, 0.03, 0, "Subtract 15 from Environmental Noise Modifiers (manual)", [], 25000],
    ['Damper', ['Ears'], 0.1, 0.02, 0, "Reduce Modifiers due to intense noise by 20 (Manual).", [], 750],
    ['Wide Frequency Adaption', ['Ears'], 0.2, 0.06, 0, "Allows users to hear Ultra- and Infrasound, needed for Ultrasound system", [], 6000],
    ['Balance Augmentor', ['Ears'], 0.1, 0.1, 0, "Add +10 to Balance skill", [['skills', 'Balance', '+10']], 10000],
    ['Ultrasound Generator', ['Head Bones'], 0.1, 0.2, 0, "Generates Ultrasound waves. Needed for Ultrasound system.", [], 1000],
    ['Ultra Wideband Radar', ['Head Bones'], 0.3, 1, 0, "Radar that also allowes to see through walls in a limited way.", [], 15000],
    ['Nano-Tox Filters', ['Lungs'], 0.3, 0.0, 0, "Optional +20 on Resist Rolls against Inhalation Vector Toxins (Manual).", [], 7500],
    ['Oxy-Stash I', ['Lungs'], 0.5, 0.0, 0, "4/1 Minute Air Reservoir (No exertion, exertion)", [], 2000],
    ['Oxy-Stash II', ['Lungs'], 0.7, 0.0, 0, "12/3 Minute Air Reservoir (No exertion, exertion)", [], 5000],
    ['Cyber Gills', ['Lungs'], 0.3, 0.0, 0, "Enables user to breath water", [], 7500],
    ['Hydraulick Jacks', ['Left Leg', 'Right Leg'], 0.5, 0, 0, 'Allows higher and farther jumps using hydraulic technics',
     [['stat', 'Jumping Distance', '*4']], 10000],
    ['Retractable Cyberskates', ['Left Leg', 'Right Leg'], 0.3, 0, 0, 'Doubles Running and Sprinting Speed on paved surfaces (Manual). Complex Action to deploy/retract.',
     [], 4000],
    ['Ruthenium Polymer Coating',
     ['Head Skin', 'Upper Torso Skin', 'Lower Torso Skin', 'Left Arm Skin', 'Right Arm Skin', 'Left leg Skin', 'Right Leg Skin'],
     0.2, 0, 0, 'Allows user to change skin colour at will', [], 10000],
    ['Chamaeleon Modification', [], 0, 0, 0,
     'Requires Ruthenium Polymer Coating, adds +20 to Stealth tests if no armor and minimal clothing is worn (manual)',[], 20000],
    ['Light Armor Cover Head', ['Head Skin'], 0.15, 0, 0, '',[['ballistic armor', 'Head', '10']], 500],
    ['Light Armor Cover Torso', ['Upper Torso Skin', 'Lower Torso Skin'], 0.15, 0, 0, 'Provides Ballistic Armor of 10',
     [['ballistic armor', 'Upper Torso', '10'],['ballistic armor', 'Lower Torso', '10']],
     1000],
    ['Light Armor Cover Right Arm', ['Right Arm Skin'], 0.2, 0, 0, 'Provides Ballistic Armor of 10',
     [['ballistic armor', 'Right Arm', '10']], 500],
    ['Light Armor Cover Left Arm', ['Left Arm Skin'], 0.2, 0, 0, 'Provides Ballistic Armor of 10',
     [['ballistic armor', 'Left Arm', '10']], 500],
    ['Light Armor Cover Right Leg', ['Right Leg Skin'], 0.2, 0, 0, 'Provides Ballistic Armor of 10',
     [['ballistic armor', 'Right Leg', '10']], 500],
    ['Light Armor Cover Left Leg', ['Left Leg Skin'], 0.2, 0, 0, 'Provides Ballistic Armor of 10',
     [['ballistic armor', 'Left Leg', '10']], 500],
    ['Medium Armor Cover Head', ['Head Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Head', '20']], 1000],
    ['Medium Armor Cover Torso', ['Upper Torso Skin', 'Lower Torso Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Upper Torso', '20'],['ballistic armor', 'Lower Torso', '20']],1000],
    ['Medium Armor Cover Right Arm', ['Right Arm Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Right Arm', '20']], 1000],
    ['Medium Armor Cover Left Arm', ['Left Arm Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Left Arm', '20']], 1000],
    ['Medium Armor Cover Right Leg', ['Right Leg Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Right Leg', '20']], 1000],
    ['Medium Armor Cover Left Leg', ['Left Leg Skin'], 0.8, 0, 0, 'Provides Ballistic Armor of 20',
     [['ballistic armor', 'Left Leg', '20']], 1000],
    ['Armor Plating Head', ['Head Skin'], 0.4, 0.3, 0, 'Provides Ballistic and Impact Armor of 30',
     [['ballistic armor', 'Head', '30'],['impact armor', 'Head', '30']], 2000],
    ['Armor Plating Torso', ['Upper Torso Skin', 'Lower Torso Skin'], 0.4, 1., 0, 'Provides Ballistic and Impact Armor of 30',
     [['ballistic armor', 'Upper Torso', '30'], ['impact armor', 'Upper Torso', '30'],
      ['ballistic armor', 'Lower Torso', '30'], ['impact armor', 'Lower Torso', '30']], 4000],
    ['Armor Plating Right Arm', ['Right Arm Skin'], 0.4, 0.75, 0, 'Provides Ballistic and Impact Armor of 30',
     [['ballistic armor', 'Right Arm', '30'],['impact armor', 'Right Arm', '30']], 2000],
    ['Armor Plating Left Arm', ['Left Arm Skin'], 0.4, 0.75, 0, 'Provides Ballistic and Inpact Armor of 30',
     [['ballistic armor', 'Left Arm', '30'], ['impact armor', 'Left Arm', '30']], 2000],
    ['Armor Plating Right Leg', ['Right Leg Skin'], 0.4, 1.5, 0, 'Provides Ballistic and Impact Armor of 30',
     [['ballistic armor', 'Right Leg', '30'], ['impact armor', 'Right Leg', '30']], 2000],
    ['Armor Plating Left Leg', ['Left Leg Skin'], 0.4, 1.5, 0, 'Provides Ballistic and Impact Armor of 30',
     [['ballistic armor', 'Left Leg', '30'], ['impact armor', 'Left Leg', '30']], 2000],
    ['Heavy Armor Plating Head', ['Head Skin'], 0.7, 0.5, 0, 'Provides Ballistic and Impact Armor of 40',
     [['ballistic armor', 'Head', '40'],['impact armor', 'Head', '40']], 4000],
    ['Heavy Armor Plating Torso', ['Upper Torso Skin', 'Lower Torso Skin'], 0.7, 1.5, 0, 'Provides Ballistic and Impact Armor of 40',
     [['ballistic armor', 'Upper Torso', '40'], ['impact armor', 'Upper Torso', '40'],
      ['ballistic armor', 'Lower Torso', '40'], ['impact armor', 'Lower Torso', '40']], 8000],
    ['Heavy Armor Plating Right Arm', ['Right Arm Skin'], 0.7, 1., 0, 'Provides Ballistic and Impact Armor of 40',
     [['ballistic armor', 'Right Arm', '40'],['impact armor', 'Right Arm', '40']], 4000],
    ['Heavy Armor Plating Left Arm', ['Left Arm Skin'], 0.7, 1., 0, 'Provides Ballistic and Inpact Armor of 40',
     [['ballistic armor', 'Left Arm', '40'], ['impact armor', 'Left Arm', '40']], 4000],
    ['Heavy Armor Plating Right Leg', ['Right Leg Skin'], 0.7, 2., 0, 'Provides Ballistic and Impact Armor of 40',
     [['ballistic armor', 'Right Leg', '40'], ['impact armor', 'Right Leg', '40']], 4000],
    ['Heavy Armor Plating Left Leg', ['Left Leg Skin'], 0.7, 2., 0, 'Provides Ballistic and Impact Armor of 40',
     [['ballistic armor', 'Left Leg', '40'], ['impact armor', 'Left Leg', '40']], 4000],
    ['Drone Hand Right', ['Right Arm'], .2, 0, 0, '',[], 5000],
    ['Drone Hand Left', ['Left Arm'], .2, 0, 0, '',[], 5000],
    ['Retracteable Cyberspurs Right', ['Right Arm'], 0.2, 0, 0, '',[], 1000],
    ['Retracteable Cyberspurs Left', ['Left Arm'], 0.2, 0, 0, '',[], 1000],
    ['Retracteable Cyberclaws Right', ['Right Arm'], 0.05, 0, 0, '',[], 500],
    ['Retracteable Cyberclaws Left', ['Left Arm'], 0.05, 0, 0, '',[], 500],
    ['Hold-Out Cyberpistol Right', ['Right Arm'], 0, 3., 0, '',[], 1000],
    ['Hold-Out Cyberpistol Left', ['Left Arm'], 0, 3., 0, '',[], 1000],
    ['Light Cyberpistol Right', ['Right Arm'], 0, 4.5, 0, '',[], 1500],
    ['Light Cyberpistol Left', ['Left Arm'], 0, 4.5, 0, '',[], 1500],
    ['Heavy Cyberpistol Right', ['Right Arm'], 0, 6., 0, '',[], 3000],
    ['Heavy Cyberpistol Left', ['Left Arm'], 0, 6., 0, '',[], 3000],
    ['Cybershotgun Right', ['Right Arm'], 0, 9., 0, '',[], 5000],
    ['Cybershotgun Left', ['Left Arm'], 0, 9., 0, '',[], 5000],

    ['Light Torso External Weapon Mount', ['Upper Torso Bones'], 0, 2., 0, 'Can equip weapons with 1-handed minimum strength of 40. 120 degree FOV.',[], 4000],
    ['Medium Torso External Weapon Mount', ['Upper Torso Bones'], 0, 3., 0, 'Can equip weapons with 1/2-handed minimum strength of 55/40. 120 degree FOV.',[], 6000],
    ['Heavy Torso External Weapon Mount', ['Upper Torso Bones'], 0, 4., 0, 'Can equip weapons with 1/2-handed minimum strength of 70/55. 120 degree FOV.',[], 8000],
    ['Light Articulated Weapon Arm', ['Upper Torso Bones'], 0, 3, 0, 'Can equip weapons with 1-handed minimum strength of 40. 360 degree FOV.',[], 6000],
    ['Medium Articulated Weapon Arm', ['Upper Torso Bones'], 0, 4.5, 0, 'Can equip weapons with 1/2-handed minimum strength of 55/40. 360 degree FOV.',[], 9000],
    ['Heavy Articulated Weapon Arm', ['Upper Torso Bones'], 0, 6., 0, 'Can equip weapons with 1/2-handed minimum strength of 70/55. 360 degree FOV.',[], 12000],
    ['Hold-Out Cyberholster Right', ['Right Leg'], 0, 6., 0, '',[], 500],
    ['Hold-Out Cyberholster Left', ['Left Leg'], 0, 6., 0, '',[], 500],
    ['Light Pistol Cyberholster Right', ['Right Leg'], 0, 9., 0, '',[], 750],
    ['Light Pistol Cyberholster Left', ['Left Leg'], 0, 9, 0, '',[], 750],
    ['Heavy Pistol Cyberholster Right', ['Right Leg'], 0, 12., 0, '',[], 1000],
    ['Heavy Pistol Cyberholster Left', ['Left Leg'], 0, 12., 0, '',[], 1000],
    ['Internal Cyberdeck Right Arm', ['Right Arm'], 0, 7., 0, 'Deck has to be purchased seperately',[], 5000],
    ['Internal Cyberdeck Left Arm', ['Left Arm'], 0, 7., 0, 'Deck has to be purchased seperately',[], 5000],
    ['Internal Cyberdeck Right Leg', ['Right Leg'], 0, 7., 0, 'Deck has to be purchased seperately',[], 5000],
    ['Internal Cyberdeck Left Leg', ['Left Leg'], 0, 7., 0, 'Deck has to be purchased seperately',[], 5000],
    ['Internal Commlink Right Arm', ['Right Arm'], 0, .1, 0, 'Commlink has to be purchased seperately',[], 1000],
    ['Internal Commlink Left Arm', ['Left Arm'], 0, .1, 0, 'Commlink has to be purchased seperately',[], 1000],
    ['Internal Commlink Right Leg', ['Right Leg'], 0, .1, 0, 'Commlink has to be purchased seperately',[], 1000],
    ['Internal Commlink Left Leg', ['Left Leg'], 0, .1, 0, 'Commlink has to be purchased seperately',[], 1000],
    ]

fixtures_nt = namedtuple('fixtures', ['id'] + fixtures[0])
fixtures_dict = OrderedDict([(entry[0], fixtures_nt(*([i]+ entry))) for i, entry in enumerate(fixtures[1:])])

adept_powers = [
    ["name", "cost", "description", "formdescription", "effects"],
    ["Combat Sense", 'X', 'Enhance Reaction', [['Physical Reaction +', '{Value}**0.5*{Magic}/10.']], [['stats', 'Physical Reaction', '+{Value}**0.5*{Magic}/10.']]],
    ["Danger Sense", 'X', 'Enhance Reaction for suprise tests (Manual). Reduce Distraction Modifier (Manual). Allow for Dodge Test even if not aware of attack.',
     [['Physical Reaction in Surprise Tests +', '{Value}**0.5*{Magic}/6.'],
      ['Distraction Modifier -', '{Value}**0.5*{Magic}/12.'],
      ['Unaware Dodge Mod', '30 - 30*math.erf({Value}*{Magic}/1000.)'],],
     [['test', 'Surprise', '+{Value}**0.5*{Magic}/6.'],
      ['stats', 'Distraction Modifier', '-{Value}**0.5*{Magic}/12.'],
     ]],
    ["Astral Sight", 10, 'Allow Adept to perceive astrally', [], []],
    ["Low Light Vision", 2, 'Low Light Vision', [], []],
    ["Infrared Vision", 2, 'Infrared Vision', [], []],
    ["Flare Compensation", 1, 'Reduce Glare Modifiers by 20 (Manual).', [], []],
    ["Wide Frequency Adaption", 3, 'Allows users to hear Ultra- and Infrasound.', [], []],
    ["Damper", 1, 'Reduce Modifiers due to intense noise by 20 (Manual).', [], []],
    ["Blindsight", 3, 'With closed eyes, the adept can use ambient sounds for an Ultrasound like Vision. Requires Wide Frequency adaption. Range 8m. Can be increased to full Ultrasound ranges with an Ultrasound generator.', [], []],
    ["Traceless Walk", 5, 'Leave no traces when walking. Does not trigger pressure sensors. (Manual)',[], []],
    ["Wall Running", 10, 'Allow Adept to run on a wall as long as he is sprinting',[], []],
    ["Mystic Armor", 'X', 'Add Ballistic and Impact Armor', [['additional armor', '{Value}**0.5*{Magic}/8.']],
     [['ballistic armor', 'Upper Torso', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Upper Torso', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Lower Torso', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Lower Torso', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Right Arm', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Right Arm', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Left Arm', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Left Arm', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Right Leg', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Right Leg', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Left Leg', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Left Leg', '{Value}**0.5*{Magic}/8.'],
      ['ballistic armor', 'Head', '{Value}**0.5*{Magic}/8.'], ['impact armor', 'Head', '{Value}**0.5*{Magic}/8.'],
     ]],
    ["Killing Hands", 5, 'Cause Physical Damage in Combat',[],  []],
    ["Critical Strike", 'X', 'Multiply Unarmed Combat Damage (Manual)', [['Unarmed Combat Damage *', '(1+{Value}**0.5*{Magic}/400.)']], [['stat', 'Unarmed Combat Damage', '*(1+{Value}**0.5*{Magic}/400.)']]],
    ["Spirit Claw", 'X', 'Multiply Unarmed Combat Damage to dual/astral targets (Manual)', [['Unarmed Combat Damage *', '(1+{Value}**0.5*{Magic}/200.)']],
     [['stat', 'Unarmed Combat Damage', '*(1+{Value}**0.5*{Magic}/200.)']]],
    ["Penetrating Strike", 'X', 'Multiply Unarmed Combat Penetration (Manual)', [['Unarmed Combat Penetration *', '(1+{Value}**0.5*{Magic}/40.)']],
     [['stat', 'Unarmed Combat Penetration', '*(1+{Value}**0.5*{Magic}/40.)']]],
    ["Elemental Strike", 5, 'Add elemental Effect to Unarmed Combat Damage (Manual)', [], []],
    ["Elemental Aura", 'X', 'Elemental Aura that deals damage on Contact (successfull attack of being successfully attacked in (un)armed combat). (Manual)',
        [['Elemental Aura Damage ', '{Value}**0.5*{Magic}/6.'], ['Elemental Aura Penetration ', '{Value}**0.5*{Magic}/20.']], []],
    ["Elemental Resistance", 'X', 'Armor against specific elemental effects (Manual)', [['Elemental Armor', '{Value}**0.5*{Magic}/3.']], []],
    ["Freefall", 'X', 'Gain no damage for falling a given distance (Manual)', [['Free falling Distance in meters ', '{Value}**0.5*{Magic}/6.']], []],
    ["Great Leap", 'X', 'Jump further', [['Jumping Distance *', '(1+{Value}**0.5*{Magic}/200.)']], [['stat', 'Jumping Distance', '*(1+{Value}**0.5*{Magic}/200.)']]],
    ["Improved Running", 'X', 'Run faster', [['Run Speed *', '(1+{Value}**0.5*{Magic}/200.)']], [['stat', 'Run Speed', '*(1+{Value}**0.5*{Magic}/200.)']]],
    ["Improved Swimming", 'X', 'Swim faster', [['Swim Speed *', '(1+{Value}**0.5*{Magic}/200.)']], [['stat', 'Swim Speed', '*(1+{Value}**0.5*{Magic}/200.)']]],
    ["Rapid Healing", 'X', 'Decrease Heal Time (Manual)', [['Heal Time /', '(1+{Value}**0.5*{Magic}/50.)']], [['stat', 'Heal Time', '/(1+{Value}**0.5*{Magic}/50.)']]],
    ["Kinesics", 10, 'Change Face. Same Gender and Metatype. Change time 5 min, Perception Test with a Test Difficulty Equal to Magic is needed to find faults. (Manual)',[],  []],
    ["Melain Control", 5, 'Change Hair Color (only natural colors). Change time 1min. Perception Test with a Test Difficulty Equal to Magic is needed to find faults. (Manual)',[],  []],
    ["Voice Control", 5, 'Change Voice. change time 1 min. Perception Test with a Test Difficulty Equal to Magic is needed to find faults. (Manual)',[],  []],
    ["Pain Resistance", 'X', 'Ignore low life penalties', [['Ignore percentage of damage', '{Value}**0.5*{Magic}/2.']], [['stat', 'Pain Resistance', '+ (1-value)**0.5 * {Value}*{Magic}/200.']]],
    ] + [
    ["Enhanced Attribute {}".format(i.name), 'X', 'Enhance {}'.format(i.name),
     [['{} *'.format(i.name), '(1+{Value}**0.5*{Magic}/600.)']],
     [['attributes', '{}'.format(i.name), '*(1+{Value}**0.5*{Magic}/600.)']]]
    for i in attributes_dict.values() if i.kind != 'special'
    ] + [
    ["Improved Skill {}".format(i.name), 'X', 'Improve {}'.format(i.name),
     [['{} +'.format(i.name), '+{Value}**0.5*{Magic}/10./' + str(i.expweight)]],
     [['skills', '{}'.format(i.name), '+{Value}**0.5*{Magic}/10./'+ str(i.expweight)]]]
    for i in skills_dict.values()
    ]


adept_powers_nt = namedtuple('adept_power', ['id'] + adept_powers[0])
adept_powers_dict = OrderedDict([(entry[0], adept_powers_nt(*([i] + entry))) for i, entry in enumerate(adept_powers[1:])])



spells = [
    ['name', 'category', 'difficulty', 'cast_time', 'resist', 'effect', 'drain', 'range', 'volume', 'anchor',
     'duration'],
    ['Astral Barrier', '', '', '', '', '', '', '', '', '', ''],
    ['Astral Armor', '', '', '', '', '', '', '', '', '', ''],
    ['Healing', '', '', '', '', '', '', '', '', '', ''],
    ['First Aid', '', '', '', '', '', '', '', '', '', ''],
    ['Heal Wounds', '', '', '', '', '', '', '', '', '', ''],
    ['Increase Physical Attribute', '', '', '', '', '', '', '', '', '', ''],
    ['Increase Reaction', '', '', '', '', '', '', '', '', '', ''],
    ['Mana Barrier', '', '', '', '', '', '', '', '', '', ''],
    ['Barrier', '', '', '', '', '', '', '', '', '', ''],
    ['Armor', '', '', '', '', '', '', '', '', '', ''],
    ['Animate', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Magic', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Enemies', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Emotions', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Individual', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Life', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Thoughts', '', '', '', '', '', '', '', '', '', ''],
    ['Mindprobe', '', '', '', '', '', '', '', '', '', ''],
    ['Clairaudience', '', '', '', '', '', '', '', '', '', ''],
    ['Clairvoyance', '', '', '', '', '', '', '', '', '', ''],
    ['Mindprobe', '', '', '', '', '', '', '', '', '', ''],
    ['Catalog', '', '', '', '', '', '', '', '', '', ''],
    ['Detect Sensors', '', '', '', '', '', '', '', '', '', ''],
    ['Control Thoughts', '', '', '', '', '', '', '', '', '', ''],
    ['Mana Illusion', '', '', '', '', '', '', '', '', '', ''],
    ['Possession', '', '', '', '', '', '', '', '', '', ''],
    ['Fear', '', '', '', '', '', '', '', '', '', ''],
    ['Shapechange', '', '', '', '', '', '', '', '', '', ''],
    ['Physical Illusion', '', '', '', '', '', '', '', '', '', ''],
    ['Physical Mask', '', '', '', '', '', '', '', '', '', ''],
    ['Physical Invisibility', '', '', '', '', '', '', '', '', '', ''],
    ['Physical Silence', '', '', '', '', '', '', '', '', '', ''],
    ['Levitation', '', '', '', '', '', '', '', '', '', ''],
    ['Magic Fingers', '', '', '', '', '', '', '', '', '', ''],
    ['Astral Weapon', '', '', '', '', '', '', '', '', '', ''],
    ['Powerbolt', '', '', '', '', '', '', '', '', '', ''],
    ['Manabolt', '', '', '', '', '', '', '', '', '', ''],
    ['Sterilize', '', '', '', '', '', '', '', '', '', ''],
    ['Firebolt', '', '', '', '', '', '', '', '', '', ''],
    ['Fireball', '', '', '', '', '', '', '', '', '', ''],
    ['Wreck Vehicle', '', '', '', '', '', '', '', '', '', ''],
    ['Melt Structure', '', '', '', '', '', '', '', '', '', ''],
]

spells_nt = namedtuple('spell', ['id'] + spells[0])
spells_dict = OrderedDict([(entry[0], spells_nt(*([i] + entry))) for i, entry in enumerate(spells[1:])])

metamagic = [
    ["name"],
    ['Centering'],
    ['Divination'],
    ['Masking'],
    ['Shielding'],
    ['Flexible Aura'],
    ['Inner Binding'],
    ['Inner Power'],
    ['Infusion'],
    ['Transfusion'],
    ['Extended Masking'],
    ['Flux'],
    ['Ally Formula'],
    ['Quickening'],
    ['Absorption'],
    ['Reflection'],
    ['Search'],
    ['Shrouding'],
    ['Spell Moding'],
    ]

metamagic_nt = namedtuple('metamagic', ['id'] + metamagic[0])
metamagic_dict = OrderedDict([(entry[0], metamagic_nt(*([i] + entry))) for i, entry in enumerate(metamagic[1:])])


#weight:payloads:
# cars: 1:1
# rotorcraft 1:1
# vector thrust: 2:1
# jets: 3:1
# bike 2:1
vehicle_chassis = [
    ["name", "locomotion", "handling", "weight", "max_speed", "acceleration", "load", 'capacity', 'size', 'constitution', 'armor', 'visibility','signature', 'cost'],
    ['Lady Bug', ['insect flight', 'walk'], 0, 0.0005, 10, 3,  0.0005, 0.0005, 0.01, 20, 1, 45, 45, 600],
    ['Bug', 'walk', 0,  0.0005, 0.2, 0.2, 0.01, 0.001, 0.01, 30, 1, 45, 45, 200],
    ['Hummel', ['insect flight', 'walk'], 0,  0.002, 12, 4, 0.002, 0.002, 0.025, 20, 1, 35, 35, 300],
    ['Dragonfly', ['insect flight', 'walk'], 0,  0.005, 13, 5, 0.005, 0.005, 0.1, 15, 1, 15, 15, 300],
    ['Roach', 'walk', 0,  0.01, 1, 1, 0.1, 0.01, 0.05, 40, 3, 25, 25, 100], #American Roach
    ['Spider', 'walk', 0,  0.1, 4, 4, 0.5, 0.05, 0.3, 30, 1, 5, 5, 200], #Vogelspinne
    ['Flying Football', 'rotor flight', 0,  5, 25, 4, 5, 5, 0.5, 30, 30, -10, -10, 500],
    ['Rolling Ball', 'roll', 0,  0.5, 10, 3, 0.5, 0.5, 0.1, 40, 5, 10, 10, 100],
    ['Blimp', 'lta flight', 0,  10, 15, 1, 10, 10, 2, 20, 0, -30, -30, 450],
    ['Cat', 'walk', 0,  4, 10, 5, 1, 0.4, 0.3, 30, 1, -5, -5, 2000],
    ['Small Patrol Drone', 'wheeled', 0,  20, 20, 2, 20, 20, 0.5, 40, 40, -10, -10, 1000],
    ['Medium Patrol Drone', 'wheeled', 0,  100, 35, 3, 100, 100, 1, 40, 50, -20, -20, 2500],
    ['Large Patrol Drone', 'wheeled', 0,  250, 40, 4, 250, 250, 2, 40, 50, -30, -30, 5000],
    ['Vector Thrust Drone', 'thrust flight', 0,  100, 60, 4, 50, 50,  1, 30, 40, -20, -20, 8000],
    ['Mini Plane Drone', 'fixed-wing flight', 0,  3, 40, 5, 2, 1, 1, 20, 1, -20, -20, 2500],
    ['Jet Drone', 'fixed-wing flight', 0,  20, 100, 10, 30, 30, 2, 20, 20, -30, -30, 32000],
    ['Hover Drone', 'hover', 0,  2, 30, 2, 2, 2, 0.5, 30, 3, -10, -10, 300],
    ['Segway', 'dual-wheeled', 0,  30, 12, 1, 100, 100, 1., 30, 0, -20, -20, 800],
    ['Personal Mobility Vehicle', 'three-wheeled', 0,  100, 20, 2, 100, 100, 2., 30, 5, -30, -30, 3000],
    ['Google Car', 'wheeled', 0,  500, 30, 2, 300, 300, 2.5, 40, 10, -35, -35, 6000],
    ['Subcompact', 'wheeled', 0, 750, 50, 3, 350, 350, 4.5, 40, 10, -40, -40, 12000], # opel insignia
    ['Speed Car', 'wheeled', 0, 1500, 75, 5, 300, 500, 4.5, 40, 10, -40, -40, 80000],
    ['Sedan', 'wheeled', 0, 1500, 50, 2, 500, 500, 5, 40, 15, -45, -45, 25000], # opel insignia
    ['Medium Van', 'wheeled', 0, 2000, 40, 2, 1500, 1500, 5.5, 40, 15, -45, -45, 30000], #sprinter kurz
    ['Large Van', 'wheeled', 0, 2500, 30, 1.5, 2500, 2500, 7, 40, 15, -50, -50, 35000], #sprinter lang
    ['Monocycle', 'monocycle', 0, 150, 60, 5,  100, 100, 1., 30, 10, -20, -20, 4000],
    ['Enclosed Monocycle', 'monocycle', 0, 400, 50, 4,  200, 200, 2, 40, 15, -30, -30, 7500],
    ['Speedbike', 'cycle', 0, 200, 75, 6, 120, 120, 2, 30, 10, -30, -30, 8000], # ducati 1199
    ['Chopper',  'rotor flight', 0, 350, 50, 4,  200, 200, 2.5, 40, 15, -35, -35, 6500], # harley davidson breakout
    ['Combat Helicopter', 'rotor flight', 0, 5000, 80, 6, 3000, 3000, 15, 40, 50, -60, -60, 750000], # apache
    #['Commuting Helicopter', '', '', '', '', '', '', ''],
    ['APC', 'wheeled', 0, 10000, 30, 1, 5000, 5000, 7, 50, 150, -50, -50, 58000], # LAV
    ['IFV', 'tracked', 0, 15000, 15, 1, 15000, 15000, 7, 50, 200, -50, -50, 130000], # Bradley
    ['Tank', 'tracked', 0, 30000, 20, 2, 30000, 30000, 9, 50, 500, -50, -50, 420000], # Leopard 2a6
    #['', '', '', '', '', '', ''],
]

vehicle_chassis_nt = namedtuple('vehicle', ['id'] + vehicle_chassis[0])
vehicle_chassis_dict = OrderedDict([(entry[0], vehicle_chassis_nt(*([i] + entry))) for i, entry in enumerate(vehicle_chassis[1:])])

agents = [
    ["name", "rating", "skills"],
    ['Civilian Driver Class I', 15, {'Pilot': 20}],
    ['Civilian Driver Class II', 20, {'Pilot': 30}],
    ['Civilian Driver Class III', 25, {'Pilot': 40}],
    ['Security Driver Class I', 20, {'Pilot': 30, 'Electronic Warfare': 20, 'Ranged Combat': 20}],
    ['Security Driver Class II', 25, {'Pilot': 40, 'Electronic Warfare': 30, 'Ranged Combat': 30}],
    ['Military Driver Class I', 25, {'Pilot': 40, 'Electronic Warfare': 40, 'Ranged Combat': 40, 'Cracking': 30}],
    ['Civilian Drone Pilot Class I', 15, {'Pilot': 20, "Perception": 10}],
    ['Civilian Drone Pilot Class II', 20, {'Pilot': 30, "Perception": 20}],
    ['Civilian Drone Pilot Class III', 25, {'Pilot': 40, "Perception": 30}],
    ['Security Drone Pilot Class I', 20, {'Pilot': 30, 'Perception': 20, 'Electronic Warfare': 20, 'Ranged Combat': 20, 'Dodge': 20, 'Stealth': 20}],
    ['Security Drone Pilot Class II', 25, {'Pilot': 40, 'Perception': 30, 'Electronic Warfare': 30, 'Ranged Combat': 30, 'Dodge': 30, 'Stealth': 30}],
    ['Military Drone Pilot Class I', 25, {'Pilot': 40, 'Perception': 40, 'Electronic Warfare': 40, 'Ranged Combat': 40, 'Dodge': 30, 'Stealth': 30, 'Cracking': 30}],
    ]


agents_nt = namedtuple('agent', ['id'] + agents[0])
agents_dict = OrderedDict([(entry[0], agents_nt(*([i] + entry))) for i, entry in enumerate(agents[1:])])


def get_vehicle_stats(chassis, agent, computer, sensors_package, equipment, cost, availability):
    chassis = vehicle_chassis_dict[chassis]
    agent = gameitems_dict[agent]
    computer = gameitems_dict[computer]
    sensors = [gameitems_dict[i] for i in sensor_packages_dict[sensors_package].content]
    equipment = [gameitems_dict[i] for i in equipment]

    cost = chassis.cost + agent.cost + computer.cost + sum([i.cost for i in sensors]) + sum([i.cost for i in equipment])
    availability = max([agent.availability, computer.availability, max([i.cost for i in sensors]) + max([i.cost for i in equipment]) if equipment else 0])
    capacity = chassis.capacity
    used_capacity = computer.absolute_capacity + capacity * computer.relative_capacity + sum([i.absolute_capacity + capacity * i.relative_capacity for i in sensors]) + \
    sum([i.absolute_capacity + capacity * i.relative_Capacity for i in equipment])

    return [cost, availability, capacity, used_capacity]

vehicles = [
    ["name", "chassis", "agent", "computer", "sensors_package", "equipment", "cost", "availability"],
    ["Shiawase Kanmushi", "Bug", "Civilian Drone Pilot Class I", "Nano Drone Computer I", "Nano Drone", [], 0, 0, ],
    ["MCT Fly-Spy", "Dragonfly", "Civilian Drone Pilot Class I", "Mini Drone Computer I", "Nano Drone", [], 0, 0, ],
    ["Lone Star iBall", "Rolling Ball", "Civilian Drone Pilot Class I", "Mini Drone Computer I", "Micro Drone", [], 0, 0, ],
    ["Lockheed Optic-X", "Mini Plane Drone", "Security Drone Pilot Class I", "Erika Elite", "Mini Drone", [], 0, 0, ],
    ["GM-Nissan Doberman", "Small Patrol Drone", "Security Drone Pilot Class I", "Renraku Sensei", "Civilian Drone", [], 0, 0, ],
    ["Steel Lynx", "Medium Patrol Drone", "Security Drone Pilot Class II", "Erika Elite", "Civilian Drone", ["Small-Arms Medium (6kg) Turret"], 0, 0, ],
    ["MCT-Nissan Roto-drone", "Flying Football", "Security Drone Pilot Class I", "Renraku Sensei", "Mini Drone", [], 0, 0, ],
    ["Renraku Stormcloud", "Blimp", "Security Drone Pilot Class I", "Renraku Sensei", "Civilian Vehicle", [], 0, 0, ],
    ["McDonnel-Douglas Nimrod", "Jet Drone", "Military Drone Pilot Class I", "Erika Elite", "Civilian Vehicle", [], 0, 0, ],
]

#for i, vehicle in enumerate(vehicles[1:]):
#    vehicles[i+1].extend(get_vehicle_stats(*vehicle[1:]))

vehicles_nt = namedtuple('vehicle', ['id'] + vehicles[0])
vehicles_dict = OrderedDict([(entry[0], vehicles_nt(*([i] + entry))) for i, entry in enumerate(vehicles[1:])])

vehicle_upgrades = [
    ['name', 'category', 'weight', 'capacity', 'cost', 'square_weight_cost'],
    ['Seat','basic', 80, 200, 500, 0],

    ['Seat Ejection','basic', 100, 250, 3000, 0],
    ['Seat, Troll', 'basic', 240, 575, 1000, 0],
    ['Seat Ejection, Troll', 'basic',  300, 750, 5000, 0],
    ['Bench', 'basic', 230, 500, 500, 0],
    ['Gridlink', 'basic', '*0.02', '*0.02', 300, 100],
    ['Manual Controls', 'basic', 20, 50, 3000, 0],
    ['Passenger Protection', 'security', 20, 30, 1000, 0],
    ['Passenger Protection, Troll', 'security', 60, 90, 2000, 0],
    ['Life Support I', 'security', 50, 50, 5000, 20],
    ['Life Support II', 'security', 200, 200, 10000, 100],
    ['Zapper System I', 'security', 2, 2, 500, 5],
    ['Zapper System II', 'security', 5, 5, 1000, 10],
    ['Zapper System III', 'security', 20, 20, 5000, 50],
    ['External Armor', 'security', 0, 0, 0, 0],
    ['Internal Armor', 'security', 0, 0, 0, 0],
    ['Signature Masking', 'security', '*0.01', '*0.04', 200, 100],
    ['Signature Masking II', 'security', '*0.02', '*0.08', 500, 300],
    ['Ruthenium Polymer Coating', 'security', '*0.01', '*0.01', 1000, 150],
    ['Oil-Slick Sprayer', 'security', 20, 20, 500, 0],
    ['Ram Plate', 'security', '*0.03', '*0.03', 0, 20],
    ['Drone Rack Mini', 'cargo', 0.5, 1, 100, 0],
    ['Drone Rack Multi Mini', 'cargo', 5, 10, 500, 0],
    ['Drone Rack Small', 'cargo', 20, 25, 500, 0],
    ['Drone Rack Medium', 'cargo', 100, 125, 800, 0],
    ['Drone Rack Large', 'cargo', 250, 300, 1000, 0],
    ['Drone Rack Airborne Small', 'cargo', 10, 25, 750, 0],
    ['Drone Rack Airborne Medium', 'cargo', 50, 125, 1250, 0],
    ['Drone Rack Airborne Large', 'cargo', 100, 250, 2000, 0],

    ['Engine Customization I', 'performance', '*0.03', '*0.03', 200, 50],
    ['Engine Customization II', 'performance',  '*0.05', '*0.05', 1000, 150],
    ['Improved Economy I', 'performance',  '*0.01', '*0.01', 100, 30],
    ['Improved Economy II', 'performance',  '*0.015', '*0.01.5', 300, 50],
    ['Handling Upgrade I', 'performance',  '*0.02', '*0.02', 200, 100],
    ['Handling Upgrade II', 'performance',  '*0.03', '*0.03', 600, 300],
    ['Offroad Suspension', 'performance',  '*0.03', '*0.03', 200, 50],
    ['Grapple', 'utility', 10, 10, 500, 0],
    ['Micro Mechanical Arm', 'utility', 0.01, 0.01, 300, 0],
    ['Mini Mechanical Arm', 'utility', 0.1, 0.1, 500, 0],
    ['Small Mechanical Arm', 'utility', 1, 1, 500, 0],
    ['Mechanical Arm', 'utility', 15, 15, 2000, 0],
    ['Rigger Adaption', 'utility', '*0.05', '*0.05', 500, 200],
    ['Nanomaintainance System', 'utility', '*0.02', '*0.02', 2000, 500],
    ['Rigger Cocoon', 'basic', 100, 300, 5000, 0],
    ['Rigger Cocoon II', 'basic', 150, 350, 20000, 0],
    ['Road Strip Ejector', 'security', 5, 5, 300, 0],
    ['Mounted Searchlight', 'security', 10, 30, 1000, 0],
    ['Smoke Projector', 'security', '*0.01', '*0.01', 100, 20],
    ['Smuggling Compartment Small', 'security', 5, 20, 500, 0],
    ['Smuggling Compartment Medium', 'security', 25, 100, 1000, 0],
    ['Smuggling Compartment Large', 'security', 100, 400, 2000, 0],

    ["Small-Arms Micro (0.5kg) Fixed Weapon Mount", "weapon", 0.75, 1.5, 100, 0],
    ["Small-Arms Light (2kg) Fixed Weapon Mount", "weapon", 3, 6, 150, 0],
    ["Small-Arms Medium (6kg) Fixed Weapon Mount", "weapon", 9, 18, 200, 0],
    ["Small-Arms Heavy (15kg) Fixed Weapon Mount", "weapon", 22.5, 45, 300, 0],
    ["Light (40kg) Fixed Weapon Mount", "weapon", 60, 120, 100, 0],
    ["Medium (100kg) Fixed Weapon Mount", "weapon", 150, 300, 100, 0],
    ["Heavy (250kg) Fixed Weapon Mount", "weapon", 375, 750, 100, 0],
    ["Assault (500kg) Fixed Weapon Mount", "weapon", 750, 1500, 100, 0],
    ["Tank (1500kg) Fixed Weapon Mount", "weapon", 2250, 4500, 100, 0],

    ["Small-Arms Micro (0.5kg) Turret", "weapon", 1.5, 1.5, 100, 0],
    ["Small-Arms Light (2kg) Turret", "weapon", 6, 6, 100, 0],
    ["Small-Arms Medium (6kg) Turret", "weapon", 18, 18, 100, 0],
    ["Small-Arms Heavy (15kg) Turret", "weapon", 45, 45, 100, 0],
    ["Light (40kg) Turret", "weapon", 120, 120, 100, 0],
    ["Medium (100kg) Turrret", "weapon", 300, 300, 100, 0],
    ["Heavy (250kg) Turret", "weapon", 750, 750, 100, 0],
    ["Assault (500kg) Turret", "weapon", 1500, 1500, 100, 0],
    ["Tank (1500kg) Turret", "weapon", 4500, 4500, 100, 0],

    ["Small-Arms Micro (0.5kg) Retracteable Turret", "weapon", 1.5, 3, 100, 0],
    ["Small-Arms Light (2kg) Retracteable Turret", "weapon", 6, 16, 100, 0],
    ["Small-Arms Medium (6kg) Retracteable Turret", "weapon", 12, 24, 100, 0],
    ["Small-Arms Heavy (15kg) Retracteable Turret", "weapon", 45, 90, 100, 0],
    ["Light (40kg) Retracteable Turret", "weapon", 120, 240, 100, 0],
    ["Medium (100kg) Retracteable Turrret", "weapon", 300, 600, 100, 0],
    ["Heavy (250kg) Retracteable Turret", "weapon", 750, 1500, 100, 0],
    ["Assault (500kg) Retracteable Turret", "weapon", 1500, 3000, 100, 0],
    ["Tank (1500kg) Retracteable Turret", "weapon", 4500, 9000, 100, 0],

    ]

vehicle_upgrades_nt = namedtuple('vehicle_upgrade', ['id'] + vehicle_upgrades[0])
vehicle_upgrades_dict = OrderedDict([(entry[0], vehicle_upgrades_nt(*([i] + entry))) for i, entry in enumerate(vehicle_upgrades[1:])])

#               single      automatic       minigun
#5.56 = 12/20               3.5kg           10kg
#7.62 = 18/30               4.5kg           20kg
#0.5 = 36/60    12kg        25kg            50kg
#20mm                                       120kg
#25mm           120 kg
#30mm                                       250kg
#105mm          1200kg
